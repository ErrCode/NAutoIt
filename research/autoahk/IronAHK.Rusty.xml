<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IronAHK.Rusty</name>
    </assembly>
    <members>
        <member name="T:IronAHK.Rusty.Common.SimpleJson">
            <summary>
            Serialize JSON strings.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.SimpleJson.Encode(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Format a dictionary of string key and object value pairs as a JSON string.
            </summary>
            <param name="Elements">The table of key and values. Objects other than a string, boolean or numeric type have their <code>ToString()</code> method called for a compatible value.</param>
            <returns>A JSON representation.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Common.SimpleJson.Decode(System.String)">
            <summary>
            Convert a JSON string to a dictionary of string key and object value pairs.
            </summary>
            <param name="Source">The JSON string to evaluate.</param>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/>.</returns>
        </member>
        <member name="T:IronAHK.Rusty.Core">
            <summary>
            A library of commands useful for desktop scripting.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Core.Control(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Makes a variety of changes to a control.
            </summary>
            <param name="Cmd">See list below.</param>
            <param name="Value">See list below.</param>
            <param name="ControlID">
            <para>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode. If this parameter is blank, the target window's topmost control will be used.</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off) . The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ControlClick(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Sends a mouse button or mouse wheel event to a control.
            </summary>
            <param name="mode">
            <para>If this parameter is blank, the target window's topmost control will be clicked (or the target window itself if it has no controls). Otherwise, one of the two modes below will be used.</para>
            <para>Mode 1 (Position): Specify the X and Y coordinates relative to the target window's upper left corner. The X coordinate must precede the Y coordinate and there must be at least one space or tab between them. For example: X55 Y33. If there is a control at the specified coordinates, it will be sent the click-event at those exact coordinates. If there is no control, the target window itself will be sent the event (which might have no effect depending on the nature of the window). Note: In this mode, the X and Y option letters of the Options parameter are ignored.</para>
            <para>Mode 2 (ClassNN or Text): Specify either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode.</para>
            <para>By default, mode 2 takes precedence over mode 1. For example, in the unlikely event that there is a control whose text or ClassNN has the format "Xnnn Ynnn", it would be acted upon by Mode 2. To override this and use mode 1 unconditionally, specify the word Pos in Options as in the following example: ControlClick, x255 y152, WinTitle,,,, Pos</para>
            <para>To operate upon a control's HWND (window handle), leave this parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off) . The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para></param>
            <param name="title">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the other 3 window parameters are omitted, the Last Found Window will be used. If this is the letter A and the other 3 window parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="text">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="button">
            <para>The button to click: LEFT, RIGHT, MIDDLE (or just the first letter of each of these). If omitted or blank, the LEFT button will be used.</para>
            <para>WheelUp (or WU) and WheelDown (or WD) are also supported on Windows NT/2000/XP or later. In this case, ClickCount is the number of notches to turn the wheel.</para>
            <para>X1 (XButton1, the 4th mouse button) and X2 (XButton2, the 5th mouse button) are also supported on Windows 2000/XP or later.</para>
            </param>
            <param name="clickCount">The number of clicks to send. If omitted or blank, 1 click is sent.</param>
            <param name="options">
            <para>A series of zero or more of the following option letters. For example: d x50 y25</para>
            <para>NA: Avoids activating the window, which might also improve reliability in cases where the user is physically moving the mouse during the ControlClick. However, this mode might not work properly for all types of windows and controls.</para>
            <para>D: Press the mouse button down but do not release it (i.e. generate a down-event). If both the D and U options are absent, a complete click (down and up) will be sent.</para>
            <para>U: Release the mouse button (i.e. generate an up-event). This option should not be present if the D option is already present (and vice versa).</para>
            <para>Pos: Specify the word Pos anywhere in Options to unconditionally use the X/Y positioning mode as described in the Control-or-Pos parameter above. </para>
            <para>Xn: Specify for n the X position to click at, relative to the control's upper left corner. If unspecified, the click will occur at the horizontal-center of the control.</para>
            <para>Yn: Specify for n the Y position to click at, relative to the control's upper left corner. If unspecified, the click will occur at the vertical-center of the control.</para>
            <para>Use decimal (not hexadecimal) numbers for the X and Y options.</para>
            </param>
            <param name="excludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="excludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ControlFocus(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets input focus to a given control on a window.
            </summary>
            <param name="Control">
            <para>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode. If this parameter is blank or omitted, the target window's topmost control will be used.</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off) . The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ControlGet(System.String@,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves various types of information about a control.
            </summary>
            <param name="OutputVar">The name of the variable in which to store the result of Cmd.</param>
            <param name="Cmd">See list below.</param>
            <param name="Value">See list below.</param>
            <param name="ControlID">
            <para>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode. If this parameter is blank, the target window's topmost control will be used.</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off) . The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ControlGetFocus(System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves which control of the target window has input focus, if any.
            </summary>
            <param name="OutputVar">The name of the variable in which to store the identifier of the control, which consists of its classname followed by its sequence number within its parent window, e.g. Button12.</param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ControlGetPos(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the position and size of a control.
            </summary>
            <param name="X">
            <para>The names of the variables in which to store the X and Y coordinates (in pixels) of Control's upper left corner. These coordinates are relative to the target window's upper-left corner and thus are the same as those used by ControlMove.</para>
            <para>If either X or Y is omitted, the corresponding values will not be stored.</para>
            </param>
            <param name="Y">See <paramref name="X"/>.</param>
            <param name="Width">The names of the variables in which to store Control's width and height (in pixels). If omitted, the corresponding values will not be stored.</param>
            <param name="Height">See <paramref name="Width"/>.</param>
            <param name="Control">
            <para>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode. If this parameter is blank, the target window's topmost control will be used.</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off) . The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ControlGetText(System.String@,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves text from a control.
            </summary>
            <param name="OutputVar">The name of the variable in which to store the retrieved text.</param>
            <param name="Control">
            <para>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode. If this parameter is blank or omitted, the target window's topmost control will be used.</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off) . The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ControlMove(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Moves or resizes a control.
            </summary>
            <param name="Control">
            <para>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode. If this parameter is blank, the target window's topmost control will be used.</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off) . The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="X">The X and Y coordinates (in pixels) of the upper left corner of Control's new location, which can be expressions. If either coordinate is blank, Control's position in that dimension will not be changed. The coordinates are relative to the upper-left corner of the Control's parent window; ControlGetPos or Window Spy can be used to determine them.</param>
            <param name="Y">See <paramref name="Y"/>.</param>
            <param name="Width">The new width and height of Control (in pixels), which can be expressions. If either parameter is blank or omitted, Control's size in that dimension will not be changed.</param>
            <param name="Height">See <paramref name="Width"/>.</param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ControlSend(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends simulated keystrokes to a window or control.
            </summary>
            <param name="Control">
            <para>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode. If this parameter is blank or omitted, the target window's topmost control will be used. If this parameter is ahk_parent, the keystrokes will be sent directly to the control's parent window (see Automating Winamp for an example).</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off) . The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="Keys">
            <para>The sequence of keys to send (see the Send command for details). To send a literal comma, escape it (`,). The rate at which characters are sent is determined by SetKeyDelay.</para>
            <para>Unlike the Send command, mouse clicks cannot be sent by ControlSend. Use ControlClick for that.</para>
            </param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ControlSetText(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Changes the text of a control.
            </summary>
            <param name="Control">
            <para>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode. If this parameter is blank, the target window's topmost control will be used.</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off) . The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="NewText">The new text to set into the control. If blank or omitted, the control is made blank.</param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.GroupActivate(System.String,System.String)">
            <summary>
            Activates the next window in a window group that was defined with <see cref="M:IronAHK.Rusty.Core.GroupAdd(System.String,System.String,System.String,System.String,System.String,System.String)"/>.
            </summary>
            <param name="name"></param>
            <param name="mode"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.GroupAdd(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a window specification to a window group, creating the group if necessary.
            </summary>
            <param name="name"></param>
            <param name="winTitle"></param>
            <param name="winText"></param>
            <param name="label"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.GroupClose(System.String,System.String)">
            <summary>
            Closes the active window if it was just activated by <see cref="M:IronAHK.Rusty.Core.GroupActivate(System.String,System.String)"/> or <see cref="M:IronAHK.Rusty.Core.GroupDeactivate(System.String,System.String)"/>.
            It then activates the next window in the series. It can also close all windows in a group.
            </summary>
            <param name="name"></param>
            <param name="mode"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.GroupDeactivate(System.String,System.String)">
            <summary>
            Similar to <see cref="M:IronAHK.Rusty.Core.GroupActivate(System.String,System.String)"/> except activates the next window not in the group.
            </summary>
            <param name="name"></param>
            <param name="mode"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.PostMessage(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a message to a window or control (SendMessage additionally waits for acknowledgement).
            </summary>
            <param name="Msg">The message number to send. See the message list to determine the number.</param>
            <param name="wParam">The first component of the message. If blank or omitted, 0 will be sent.</param>
            <param name="lParam">
            <para>If this parameter is blank or omitted, the message will be sent directly to the target window rather than one of its controls. Otherwise, this parameter can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode.</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off). The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="Control">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID% (also accepts a control's HWND). The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinTitle">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="WinText">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeTitle">Windows whose text include this value will not be considered.</param>
            <param name="ExcludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SendMessage(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends a message to a window or control (SendMessage additionally waits for acknowledgement).
            </summary>
            <param name="Msg">The message number to send. See the message list to determine the number.</param>
            <param name="wParam">The first component of the message. If blank or omitted, 0 will be sent.</param>
            <param name="lParam">The second component of the message. If blank or omitted, 0 will be sent.</param>
            <param name="Control">
            <para>If this parameter is blank or omitted, the message will be sent directly to the target window rather than one of its controls. Otherwise, this parameter can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by SetTitleMatchMode.</para>
            <para>To operate upon a control's HWND (window handle), leave the Control parameter blank and specify ahk_id %ControlHwnd% for the WinTitle parameter (this also works on hidden controls even when DetectHiddenWindows is Off). The HWND of a control is typically retrieved via ControlGet Hwnd, MouseGetPos, or DllCall.</para>
            </param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the next 3 parameters are omitted, the Last Found Window will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID% (also accepts a control's HWND). The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SplashTextOff">
            <summary>
            Creates a customizable text popup window.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Core.SplashTextOn(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a customizable text popup window.
            </summary>
            <param name="Width">The width in pixels of the Window. Default 200.</param>
            <param name="Height">The height in pixels of the window (not including its title bar if the script's file extension isn't .aut). Default 0 (i.e. just the title bar will be shown). This parameter can be an expression.</param>
            <param name="Title">The title of the window. Default empty (blank).</param>
            <param name="Text">The text of the window. Default empty (blank). If Text is long, it can be broken up into several shorter lines by means of a continuation section, which might improve readability and maintainability.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.StatusBarGetText(System.String@,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the text from a standard status bar control.
            </summary>
            <param name="OutputVar">The name of the variable in which to store the retrieved text.</param>
            <param name="Part">Which part number of the bar to retrieve. Default 1, which is usually the part that contains the text of interest.</param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the other 3 window parameters are blank or omitted, the Last Found Window will be used. If this is the letter A and the other 3 window parameters are blank or omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.StatusBarWait(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Waits until a window's status bar contains the specified string.
            </summary>
            <param name="BarText">
            <para>The text or partial text for the which the command will wait to appear. Default is blank (empty), which means to wait for the status bar to become blank. The text is case sensitive and the matching behavior is determined by SetTitleMatchMode, similar to WinTitle below.</para>
            <para>To instead wait for the bar's text to change, either use StatusBarGetText in a loop, or use the RegEx example at the bottom of this page.</para>
            </param>
            <param name="Seconds">The number of seconds (can contain a decimal point) to wait before timing out, in which case ErrorLevel will be set to 1. Default is blank, which means wait indefinitely. Specifying 0 is the same as specifying 0.5.</param>
            <param name="Part">Which part number of the bar to retrieve. Default 1, which is usually the part that contains the text of interest.</param>
            <param name="WinTitle">The title or partial title of the target window (the matching behavior is determined by SetTitleMatchMode). If this and the other 3 window parameters are blank or omitted, the Last Found Window will be used. If this is the letter A and the other 3 window parameters are blank or omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a process identifier (PID), specify ahk_pid %VarContainingPID%. To use a window group, specify ahk_group GroupName. To use a window's unique ID number, specify ahk_id %VarContainingID%. The search can be narrowed by specifying multiple criteria. For example: My File.txt ahk_class Notepad</param>
            <param name="WinText">If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if DetectHiddenText is ON.</param>
            <param name="Interval">How often the status bar should be checked while the command is waiting (in milliseconds), which can be an expression. Default is 50.</param>
            <param name="ExcludeTitle">Windows whose titles include this value will not be considered.</param>
            <param name="ExcludeText">Windows whose text include this value will not be considered.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinActivate(System.String,System.String,System.String,System.String)">
            <summary>
            Activates the specified window (makes it foremost).
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinActivateBottom(System.String,System.String,System.String,System.String)">
            <summary>
            Activates the bottommost (least recently active) matching window rather than the topmost.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinActive(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the Unique ID (HWND) of the active window if it matches the specified criteria.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinClose(System.String,System.String,System.String,System.String)">
            <summary>
            Closes the specified window.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinExist(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the Unique ID (HWND) of the first matching window (0 if none) as a hexademinal integer.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinGet(System.String@,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the specified window's unique ID, process ID, process name, or a list of its controls.
            </summary>
            <param name="result"></param>
            <param name="command"></param>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinGetActiveStats(System.String@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Combines the functions of <see cref="M:IronAHK.Rusty.Core.WinGetActiveTitle(System.String@)"/> and <see cref="M:IronAHK.Rusty.Core.WinGetPos(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.String,System.String,System.String,System.String)"/> into one command.
            </summary>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinGetActiveTitle(System.String@)">
            <summary>
            Retrieves the title of the active window.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinGetClass(System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the specified window's class name.
            </summary>
            <param name="result"></param>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinGetPos(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the position and size of the specified window.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinGetText(System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the text from the specified window.
            </summary>
            <param name="result"></param>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinGetTitle(System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the title of the specified window.
            </summary>
            <param name="result"></param>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinHide(System.String,System.String,System.String,System.String)">
            <summary>
            Hides the specified window.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinKill(System.String,System.String,System.String,System.String)">
            <summary>
            Forces the specified window to close.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinMaximize(System.String,System.String,System.String,System.String)">
            <summary>
            Enlarges the specified window to its maximum size.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinMenuSelectItem(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Invokes a menu item from the menu bar of the specified window.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="menu"></param>
            <param name="subMenu1"></param>
            <param name="subMenu2"></param>
            <param name="subMenu3"></param>
            <param name="subMenu4"></param>
            <param name="subMenu5"></param>
            <param name="subMenu6"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinMinimize(System.String,System.String,System.String,System.String)">
            <summary>
            Collapses the specified window into a button on the task bar.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinMinimizeAll">
            <summary>
            Minimizes all windows.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinMinimizeAllUndo">
            <summary>
            Unminimizes all windows.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinMove(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Changes the position and/or size of the specified window.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinRestore(System.String,System.String,System.String,System.String)">
            <summary>
            Unminimizes or unmaximizes the specified window if it is minimized or maximized.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinSet(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Makes a variety of changes to the specified window, such as "always on top" and transparency.
            </summary>
            <param name="attribute"></param>
            <param name="value"></param>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinSetTitle(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Changes the title of the specified window.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="newTitle"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinShow(System.String,System.String,System.String,System.String)">
            <summary>
            Unhides the specified window.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinWait(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Waits until the specified window exists.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="seconds"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinWaitActive(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Waits until the specified window is active.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="seconds"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinWaitClose(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Waits until the specified window does not exist.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="seconds"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.WinWaitNotActive(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Waits until the specified window is not active.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="seconds"></param>
            <param name="excludeTitle"></param>
            <param name="excludeText"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Process(System.String,System.String,System.String)">
            <summary>
            Performs one of the following operations on a process: checks if it exists; changes its priority; closes it; waits for it to close.
            </summary>
            <param name="command">
            <list type="bullet">
            <item><term>Exist</term>: <description>set <see cref="P:IronAHK.Rusty.Core.ErrorLevel"/> to the process ID (PID) of the matching process;</description></item>
            <item><term>Close</term>: <description>terminate the process and set <see cref="P:IronAHK.Rusty.Core.ErrorLevel"/> to its PID;</description></item>
            <item><term>Priority</term>: <description>change the priority of the process to:
            <c>Low</c>, <c>BelowNormal</c>, <c>Normal</c>, <c>AboveNormal</c>, <c>High</c> or <c>RealTime</c> specified in <paramref name="arg"/>;</description></item>
            <item><term>Wait</term>: <description>wait <paramref name="arg"/> seconds for the process to exist;</description></item>
            <item><term>WaitClose</term>: <description>wait <paramref name="arg"/> seconds for the process to close.</description></item>
            </list>
            </param>
            <param name="name">A process name or PID. Leave blank to use the current running process.</param>
            <param name="arg">See <paramref name="command"/>.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Run(System.String,System.String,System.String,System.Int32@,System.Boolean)">
            <summary>
            Runs an external program.
            </summary>
            <param name="target">A document, URL, executable file, shortcut or system verb to launch.</param>
            <param name="workingDir">The working directory of the new process.</param>
            <param name="showMode">Optionally one of the following: <c>min</c> (minimised), <c>max</c> (maximised) or <c>hide</c> (hidden).</param>
            <param name="pid">The variable to store the newly created process ID.</param>
            <param name="wait"><c>true</c> to wait for the process to close before continuing, <c>false</c> otherwise.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.RunAs(System.String,System.String,System.String)">
            <summary>
            Specifies a set of user credentials to use for all subsequent uses of <see cref="M:IronAHK.Rusty.Core.Run(System.String,System.String,System.String,System.Int32@,System.Boolean)"/>.
            </summary>
            <param name="user">The username.</param>
            <param name="password">The password.</param>
            <param name="domain">The user domain.</param>
            <remarks>Leave all parameters blank to use no credentials.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.RunWait(System.String,System.String,System.String,System.Int32@)">
            <summary>
            See <see cref="M:IronAHK.Rusty.Core.Run(System.String,System.String,System.String,System.Int32@,System.Boolean)"/>.
            </summary>
            <param name="target"></param>
            <param name="workingDir"></param>
            <param name="showMode"></param>
            <param name="pid"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Shutdown(System.Int32)">
            <summary>
            Shuts down, restarts, or logs off the system.
            </summary>
            <param name="code">A combination of the following codes:
            <list type="bullet">
            <item><term>0</term>: <description>logoff</description></item>
            <item><term>1</term>: <description>shutdown</description></item>
            <item><term>2</term>: <description>reboot</description></item>
            <item><term>4</term>: <description>force</description></item>
            <item><term>8</term>: <description>power down</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.DllCall(System.Object,System.Object[])">
            <summary>
            Calls an unmanaged function in a DLL.
            </summary>
            <param name="function">
            <para>The path to the function, e.g. <c>C:\path\to\my.dll</c>. The ".dll" file extension can be omitted.</para>
            <para>If an absolute path is not specified on Windows the function will search the following system libraries (in order):
            User32.dll, Kernel32.dll, ComCtl32.dll, or Gdi32.dll.</para>
            </param>
            <param name="parameters">The type and argument list.</param>
            <returns>The value returned by the function.</returns>
            <remarks>
            <para><see cref="P:IronAHK.Rusty.Core.ErrorLevel"/> will be set to one of the following:</para>
            <list type="bullet">
            <item><term>0</term>: <description>success</description></item>
            <item><term>-3</term>: <description>file could not be accessed</description></item>
            <item><term>-4</term>: <description>function could not be found</description></item>
            </list>
            <para>The following types can be used:</para>
            <list type="bullet">
            <item><term><c>str</c></term>: <description>a string</description></item>
            <item><term><c>int64</c></term>: <description>a 64-bit integer</description></item>
            <item><term><c>int</c></term>: <description>a 32-bit integer</description></item>
            <item><term><c>short</c></term>: <description>a 16-bit integer</description></item>
            <item><term><c>char</c></term>: <description>an 8-bit integer</description></item>
            <item><term><c>float</c></term>: <description>a 32-bit floating point number</description></item>
            <item><term><c>double</c></term>: <description>a 64-bit floating point number</description></item>
            <item><term><c>*</c> or <c>P</c> suffix</term>: <description>pass the specified type by address</description></item>
            <item><term><c>U</c> prefix</term>: <description>use unsigned values for numeric types</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.FunctionReference(System.String)">
            <summary>
            Find a function in the local scope.
            </summary>
            <param name="name">The name of the function.</param>
            <returns>A delegate (function pointer).</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.NumGet(System.Int64,System.Int32,System.String)">
            <summary>
            Returns a binary number stored at the specified address in memory.
            </summary>
            <param name="address">The address in memory.</param>
            <param name="offset">The offset from <paramref name="address"/>.</param>
            <param name="type">Any type outlined in <see cref="M:IronAHK.Rusty.Core.DllCall(System.Object,System.Object[])"/>.</param>
            <returns>The value stored at the address.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.NumPut(System.Int32,System.Int64,System.Int32,System.String)">
            <summary>
            Stores a number in binary format at the specified address in memory.
            </summary>
            <param name="number">The number to store.</param>
            <param name="address">The address in memory.</param>
            <param name="offset">The offset from <paramref name="address"/>.</param>
            <param name="type">Any type outlined in <see cref="M:IronAHK.Rusty.Core.DllCall(System.Object,System.Object[])"/>.</param>
            <returns>The address of the first byte written.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.RegisterCallback(System.String,System.Object[])">
            <summary>
            Converts a local function to a native function pointer.
            </summary>
            <param name="function">The name of the function.</param>
            <param name="args">Unused legacy parameters.</param>
            <returns>An integer address to the function callable by unmanaged code.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.VarSetCapacity(System.Object@,System.Int32,System.Int32)">
            <summary>
            Enlarges a variable's holding capacity. Usually only necessary for <see cref="M:IronAHK.Rusty.Core.DllCall(System.Object,System.Object[])"/>.
            </summary>
            <param name="variable">The variable to change.</param>
            <param name="capacity">Specify zero to return the current capacity.
            Otherwise <paramref name="variable"/> will be recreated as a byte array with this total length.</param>
            <param name="pad">Specify a value between 0 and 255 to initalise each index with this number.</param>
            <returns>The total capacity of <paramref name="variable"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.ClipWait(System.Double,System.Boolean)">
            <summary>
            Waits until the clipboard contains data.
            </summary>
            <param name="timeout">If omitted, the command will wait indefinitely.
            Otherwise, it will wait no longer than this many seconds</param>
            <param name="type"><c>false</c> to wait specifically for text or files to appear, otherwise wait for data of any kind.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.EnvGet(System.String@,System.String)">
            <summary>
            Retrieves an environment variable.
            </summary>
            <param name="output">The variable to store the result.</param>
            <param name="name">The name of the environment variable to retrieve.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.EnvSet(System.String,System.String)">
            <summary>
            Writes a value to a variable contained in the environment.
            </summary>
            <param name="name">Name of the environment variable to use, e.g. <c>PATH</c>.</param>
            <param name="value">Value to set the environment variable to.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.EnvUpdate">
            <summary>
            Notifies the operating system and all running applications that environment variable have changed.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Core.SysGet(System.String@,System.String,System.String)">
            <summary>
            Retrieves screen resolution, multi-monitor info, dimensions of system objects, and other system properties.
            </summary>
            <param name="output">The variable to store the result.</param>
            <param name="command"></param>
            <param name="param"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.DES(System.Object,System.Object,System.Boolean)">
            <summary>
            Encrypt or decrypt data with the Data Encryption Standard (DES) algorithm.
            </summary>
            <param name="value">The data to encrypt or decrypt.</param>
            <param name="key">The secret key.</param>
            <param name="decrypt"><code>true</code> to decrypt the given <paramref name="value"/>, otherwise encrypt.</param>
            <returns>The corresponding encrypted or decrypted data.</returns>
            <remarks>A key length of 64 bits is supported.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.RC2(System.Object,System.Object,System.Boolean)">
            <summary>
            Encrypt or decrypt data with the RC2 algorithm.
            </summary>
            <param name="value">The data to encrypt or decrypt.</param>
            <param name="key">The secret key.</param>
            <param name="decrypt"><code>true</code> to decrypt the given <paramref name="value"/>, otherwise encrypt.</param>
            <returns>The corresponding encrypted or decrypted data.</returns>
            <remarks>Key lengths from 40 bits to 128 bits in increments of 8 bits are supported.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.Rijndael(System.Object,System.Object,System.Boolean)">
            <summary>
            Encrypt or decrypt data with the Rijndael algorithm.
            </summary>
            <param name="value">The data to encrypt or decrypt.</param>
            <param name="key">The secret key.</param>
            <param name="decrypt"><code>true</code> to decrypt the given <paramref name="value"/>, otherwise encrypt.</param>
            <returns>The corresponding encrypted or decrypted data.</returns>
            <remarks>Key lengths of 128, 192, or 256 bits are supported.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.TripleDES(System.Object,System.Object,System.Boolean)">
            <summary>
            Encrypt or decrypt data with the Triple Data Encryption Standard (TripleDES) algorithm.
            </summary>
            <param name="value">The data to encrypt or decrypt.</param>
            <param name="key">The secret key.</param>
            <param name="decrypt"><code>true</code> to decrypt the given <paramref name="value"/>, otherwise encrypt.</param>
            <returns>The corresponding encrypted or decrypted data.</returns>
            <remarks>
            <para>Three successive iterations of the <see cref="M:IronAHK.Rusty.Core.DES(System.Object,System.Object,System.Boolean)"/> algorithm are used, with either two or three 56-bit keys.</para>
            <para>Key lengths from 128 bits to 192 bits in increments of 64 bits are supported.</para>
            </remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.CRC32(System.Object)">
            <summary>
            Calculates the CRC32 polynomial of an object.
            </summary>
            <param name="value">The object to check.</param>
            <returns>A checksum of <paramref name="value"/> as an integer.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.MD5(System.Object)">
            <summary>
            Calculates the MD5 hash of an object.
            </summary>
            <param name="value">The object to hash.</param>
            <returns>A 32-character hexadecimal number.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.RIPEMD160(System.Object)">
            <summary>
            Calculates the RIPEMD160 hash of an object.
            </summary>
            <param name="value">The object to hash.</param>
            <returns>A 40-character hexadecimal number.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.SHA1(System.Object)">
            <summary>
            Calculates the SHA1 hash of an object.
            </summary>
            <param name="value">The object to hash.</param>
            <returns>A 40-character hexadecimal number.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.SHA256(System.Object)">
            <summary>
            Calculates the SHA256 hash of an object.
            </summary>
            <param name="value">The object to hash.</param>
            <returns>A 64-character hexadecimal number.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.SHA384(System.Object)">
            <summary>
            Calculates the SHA384 hash of an object.
            </summary>
            <param name="value">The object to hash.</param>
            <returns>A 96-character hexadecimal number.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.SHA512(System.Object)">
            <summary>
            Calculates the SHA512 hash of an object.
            </summary>
            <param name="value">The object to hash.</param>
            <returns>A 128-character hexadecimal number.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.SecureRandom(System.Decimal,System.Decimal)">
            <summary>
            Generates a secure (cryptographic) random number. 
            </summary>
            <param name="min">The lower bound.</param>
            <param name="max">The upper bound.</param>
            <returns>A random number between the specified range. Leave both parameters blank to give any 128-bit numeric result.
            If <paramref name="min"/> and <paramref name="max"/> are both pure integers, the result would also be an integer without a remainder.</returns>
            <remarks>A cryptographic random number generator produces an output that is computationally infeasible to predict with a probability that is better than one half.
            <see cref="M:IronAHK.Rusty.Core.Random(System.Double@,System.Double,System.Double)"/> uses a simpler algorithm which is much faster but less secure.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.TryParseCoordinate(System.String,System.Drawing.Point@)">
            <summary>
            Parse a string and get Coordinates
            </summary>
            <param name="input">String in Format X123 Y123</param>
            <param name="p">out Point Struct if possible</param>
            <returns>true if parsing succesful</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.MergeDictionarys``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Merges two Dictionarys in generic way
            </summary>
            <typeparam name="T">any</typeparam>
            <typeparam name="T2">any</typeparam>
            <param name="dict1">Dictionary 1</param>
            <param name="dict2">Dictionary 2</param>
            <returns>Merged Dictionary</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.SoundBeep(System.Int32,System.Int32)">
            <summary>
            Emits a tone from the PC speaker.
            </summary>
            <param name="frequency">The frequency of the sound which should be between 37 and 32767.
            If omitted, the frequency will be 523.</param>
            <param name="duration">The duration of the sound in ms. If omitted, the duration will be 150.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SoundGet(System.String@,System.String,System.String,System.String)">
            <summary>
            Retrieves various settings from a sound device.
            </summary>
            <param name="output"></param>
            <param name="component"></param>
            <param name="control"></param>
            <param name="device"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SoundGetWaveVolume(System.Int32@,System.Int32)">
            <summary>
            Retrieves the wave output volume for a sound device.
            </summary>
            <param name="output">The variable to store the result.</param>
            <param name="device">If this parameter is omitted, it defaults to 1 (the first sound device),
            which is usually the system's default device for recording and playback.
            Specify a higher value to operate upon a different sound device.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SoundPlay(System.String,System.Boolean)">
            <summary>
            Plays a sound, video, or other supported file type.
            </summary>
            <param name="filename">
            <para>The name of the file to be played.</para>
            <para>To produce standard system sounds, specify an asterisk followed by a number as shown below.</para>
            <list type="bullet">
            <item><term>*-1</term>: <description>simple beep</description></item>
            <item><term>*16</term>: <description>hand (stop/error)</description></item>
            <item><term>*32</term>: <description>question</description></item>
            <item><term>*48</term>: <description>exclamation</description></item>
            <item><term>*64</term>: <description>asterisk (info)</description></item>
            </list>
            </param>
            <param name="wait"><c>true</c> to block the current thread until the sound has finished playing, false otherwise.</param>
            <remarks><see cref="P:IronAHK.Rusty.Core.ErrorLevel"/> is set to <c>1</c> if an error occured, <c>0</c> otherwise.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.SoundSet(System.String,System.String,System.String,System.String)">
            <summary>
            Changes various settings of a sound device.
            </summary>
            <param name="setting"></param>
            <param name="component"></param>
            <param name="control"></param>
            <param name="device"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SoundSetWaveVolume(System.String,System.Int32)">
            <summary>
            Changes the wave output volume for a sound device.
            </summary>
            <param name="percent">Percentage number between -100 and 100 inclusive.
            If the number begins with a plus or minus sign, the current volume level will be adjusted up or down by the indicated amount.</param>
            <param name="device">If this parameter is omitted, it defaults to 1 (the first sound device),
            which is usually the system's default device for recording and playback.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Critical(System.String)">
            <summary>
            Prevents the current thread from being interrupted by other threads.
            </summary>
            <param name="mode">
            <list type="bullet">
            <item><term>On</term>: <description>give the current thread the highest priority.</description></item>
            <item><term>Off</term>: <description>resets the current thread priority to normal.</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Exit(System.Int32)">
            <summary>
            Exits the current thread or the entire program if non-persistent.
            </summary>
            <param name="exitCode">An integer that is returned to the caller.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ExitApp(System.Int32)">
            <summary>
            Terminates the program unconditionally.
            </summary>
            <param name="exitCode">An integer that is returned to the caller.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.IsFunc(System.String)">
            <summary>
            Checks if a function is defined.
            </summary>
            <param name="name">The name of a function.</param>
            <returns><c>true</c> if the specified function exists in the current scope, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.IsLabel(System.String)">
            <summary>
            Checks if a label is defined.
            </summary>
            <param name="name">The name of a label.</param>
            <returns><c>true</c> if the specified label exists in the current scope, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.OnExit(System.String)">
            <summary>
            Specifies a label to run automatically when the program exits.
            </summary>
            <param name="label">The name of a label. Leave blank to remove an existing label, if any.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.OnMessage(System.String,System.String,System.String)">
            <summary>
            Specifies a function to call automatically when the program receives the specified message.
            </summary>
            <param name="number">The number of the message to monitor.</param>
            <param name="function">The name of a function to call whenever the specified message is received.</param>
            <param name="maxThreads">The maximum number of concurrent threads to launch per message number.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.OutputDebug(System.String)">
            <summary>
            Sends a string to the debugger (if any) for display.
            </summary>
            <param name="text">The text to send to the debugger for display.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Pause(System.String,System.Boolean)">
            <summary>
            Pauses the current thread.
            </summary>
            <param name="mode">
            <list type="bullet">
            <item><term>Toggle</term> (default): <description>pauses the current thread unless the thread beneath it is paused, in which case the underlying thread is unpaused.</description></item>
            <item><term>On</term>: <description>pauses the current thread.</description></item>
            <item><term>Off</term>: <description>if the thread beneath the current thread is paused, it will be in an unpaused state when resumed.</description></item>
            </list>
            </param>
            <param name="parentThread">
            <list type="bullet">
            <item><term>0</term>: <description>pause the current thread.</description></item>
            <item><term>1</term>: <description>marks the thread beneath the current thread as paused so that when it resumes, it will finish the command it was running (if any) and then enter a paused state. If there is no thread beneath the current thread, the program itself is paused, which prevents timers from running.</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Reload">
            <summary>
            Replaces the currently running instance of the program with a new one.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Core.SetTimer(System.String,System.String,System.Int32)">
            <summary>
            Calls a function automatically at every specified interval.
            </summary>
            <param name="label">Name of the label to call.</param>
            <param name="mode">
            <list type="bullet">
            <item><term>On</term>: <description>enables a previously disabled timer or creates a new one at 250ms intervals.</description></item>
            <item><term>Off</term>: <description>disables an existing timer.</description></item>
            <item><term>Period</term>: <description>creates a new timer at the specified interval in milliseconds. If this value is negative the timer will only run once.</description></item>
            </list>
            </param>
            <param name="priority">A value between 0 and 4 inclusive to indicate the priority of the timer's thread.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Sleep(System.Int32)">
            <summary>
            Waits the specified amount of time before continuing.
            </summary>
            <param name="Delay">The amount of time to pause in milliseconds.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Suspend(System.String)">
            <summary>
            Disables or enables all or selected hotkeys.
            </summary>
            <param name="mode">
            <list type="bullet">
            <item><term>On</term>: <description>suspends all hotkeys.</description></item>
            <item><term>Off</term>: <description>re-enables all hotkeys.</description></item>
            <item><term>Toggle</term> (default): <description>changes to the opposite of its previous state.</description></item>
            <item><term>Permit</term>: <description>marks the current subroutine as being exempt from suspension.</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Thread">
            <summary>
            This method is obsolete, use <see cref="M:IronAHK.Rusty.Core.Critical(System.String)"/>.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Core.Click(System.Object[])">
            <summary>
            Clicks a mouse button at the specified coordinates. It can also hold down a mouse button, turn the mouse wheel, or move the mouse.
            </summary>
            <param name="options">Can be one or more of the following options:
            <list type="bullet">
            <item><term><c>X</c> or <c>Y</c></term>: <description>the coordinates;</description></item>
            <item><term>Button</term>: <description><c>Left</c> (default), <c>Middle</c>, <c>Right</c>, <c>X1</c> or <c>X2</c>;</description></item>
            <item><term>Wheel</term>: <description><c>WheelUp</c>, <c>WheelDown</c>, <c>WheelLeft</c> or <c>WheelRight</c>;</description></item>
            <item><term>Count</term>: <description>number of times to send the click;</description></item>
            <item><term><c>Down</c> or <c>Up</c></term>: <description>if omitted send a down click followed by an up release;</description></item>
            <item><term><c>Relative</c></term>: <description>treat the coordinates as relative offsets from the current mouse position.</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.MouseClickDrag(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Clicks and holds the specified mouse button, moves the mouse to the destination coordinates, then releases the button.
            </summary>
            <param name="button">Either <c>Left</c> (default), <c>Middle</c>, <c>Right</c>, <c>X1</c> or <c>X2</c>.</param>
            <param name="x1">The starting x-coordinate.</param>
            <param name="y1">The starting y-coordinate.</param>
            <param name="x2">The final x-coordinate.</param>
            <param name="y2">The final y-coordinate.</param>
            <param name="speed">The speed to move the mouse from 0 (fastest) to 100 (slowest).
            The default speed is determined by <see cref="P:IronAHK.Rusty.Core.A_DefaultMouseSpeed"/>.</param>
            <param name="relative"><c>true</c> to treat the first set of coordinates as relative offsets from the current mouse position
            and the second set as offsets from the first, <c>false</c> otherwise.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.CoordMode(System.String,System.String)">
            <summary>
            Change the coordinate modes.
            </summary>
            <param name="item">
            <list type="bullet">
            <item><term>ToolTip</term></item>
            <item><term>Pixel</term></item>
            <item><term>Mouse</term></item>
            <item><term>Caret</term></item>
            <item><term>Menu</term></item>
            </list>
            </param>
            <param name="mode">
            <list type="bullet">
            <item><term>Screen</term>: <description>retrieve absolute coordinates;</description></item>
            <item><term>Relative</term>: <description>coordinates relative to the upper left corner of the active window.</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.MouseGetPos(System.Int32@,System.Int32@,System.Int64@,System.String@,System.Int32)">
            <summary>
            Retrieves the current position of the mouse cursor, and optionally which window and control it is hovering over.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="win">The window ID.</param>
            <param name="control">The control ID.</param>
            <param name="mode">
            <list type="bullet">
            <item><term>2</term>: retrieve the <paramref name="control"/> ID rather than its class name.</item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_Add(System.String,System.Int64,System.String)">
            <summary>
            Adds a new node to the TreeView.
            </summary>
            <param name="text">The node text.</param>
            <param name="parent">The optional parent node ID.</param>
            <param name="options">See <see cref="M:IronAHK.Rusty.Core.TV_Modify(System.Int64,System.String,System.String)"/>.</param>
            <returns>The ID of the created node.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_Delete(System.Int64)">
            <summary>
            Removes all or the specified node.
            </summary>
            <param name="id">The node ID. Leave blank to remove all nodes.</param>
            <returns><c>true</c> if an item was removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_GetChild(System.Int64)">
            <summary>
            Returns the ID of the specified node's fist child.
            </summary>
            <param name="id">The parent node ID.</param>
            <returns>The ID of the first child or <c>0</c> if none.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_GetCount">
            <summary>
            Returns the total number of nodes.
            </summary>
            <returns>The number of nodes.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_GetNext(System.Int32,System.String)">
            <summary>
            Returns the next node with the specified criteria.
            </summary>
            <param name="id">The starting node ID. Leave blank to search from the first node.</param>
            <param name="mode">
            <list type="bullet">
            <item><term><c>Full</c></term>: <description>the next node irrespective of its relationship to the starting node</description></item>
            <item><term><c>Checked</c></term>: <description>the next checked node, implies <c>Full</c></description></item>
            <item><term>(blank)</term>: <description>the next sibling node</description></item>
            </list>
            </param>
            <returns>The ID of the first match.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_GetParent(System.Int64)">
            <summary>
            Returns the ID of the specified node's fist parent.
            </summary>
            <param name="id">The child node ID.</param>
            <returns>The ID of the parent or <c>0</c> if none.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_GetPrev(System.Int64)">
            <summary>
            Returns the ID of the sibling above the specified node.
            </summary>
            <param name="id">The node ID.</param>
            <returns>The ID of the previous node.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_GetSelection">
            <summary>
            Returns the selected nodes's ID.
            </summary>
            <returns>The ID of the currently selected node.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_GetText(System.String@,System.Int64)">
            <summary>
            Retrieves the text of the specified node.
            </summary>
            <param name="result">The variable to store the node text.</param>
            <param name="id">The node ID.</param>
            <returns>The <paramref name="id"/> if found, <c>0</c> otherwise.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.TV_Modify(System.Int64,System.String,System.String)">
            <summary>
            Modifies the attributes and/or text of a node.
            </summary>
            <param name="id">The node ID.</param>
            <param name="options">
            <list type="bullet">
            <item><term><c>bold</c></term>: <description>displays <paramref name="text"/> in bold</description></item>
            <item><term><c>check</c></term>: <description>shows a checkmark beside the node</description></item>
            <item><term><c>select</c></term>: <description>selects the node</description></item>
            <item><term><c>vis</c></term>: <description>ensures the node is visible</description></item>
            </list>
            </param>
            <param name="text">The new node text. Leave blank to keep the current text.</param>
            <returns>The ID of the modified node.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.IL_Add(System.Int64,System.String,System.Int32)">
            <summary>
            Adds an image to the specified ImageList and returns its index.
            </summary>
            <param name="id">The ImageList ID.</param>
            <param name="file">The source of the image.</param>
            <param name="index">The index of the icon if <paramref name="file"/> is a multi-icon or resource format.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.IL_Create">
            <summary>
            Creates a new ImageList.
            </summary>
            <returns>The unique ID of the ImageList.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.IL_Destroy(System.Int32)">
            <summary>
            Deletes an ImageList.
            </summary>
            <param name="id">The ImageList ID.</param>
            <returns><c>true</c> if the specified ImageList was deleted, <c>falsle</c> otherwise.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Drive(System.String,System.String,System.String)">
            <summary>
            Ejects/retracts the tray in a CD or DVD drive, or sets a drive's volume label.
            </summary>
            <param name="command"></param>
            <param name="drive">The drive letter.</param>
            <param name="value"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.DriveGet(System.String@,System.String,System.String)">
            <summary>
            Retrieves various types of information about the computer's drive(s).
            </summary>
            <param name="result">The name of the variable in which to store the result.</param>
            <param name="command"></param>
            <param name="value"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.DriveSpaceFree(System.Double@,System.String)">
            <summary>
            Retrieves the free disk space of a drive, in megabytes.
            </summary>
            <param name="result">The variable in which to store the result.</param>
            <param name="path">Path of drive to receive information from.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileAppend(System.String,System.String)">
            <summary>
            Writes text to the end of a file, creating it first if necessary.
            </summary>
            <param name="text">The text to append to <paramref name="file"/>.</param>
            <param name="file">The name of the file to be appended.
            <list type="bullet">
            <item><term>Binary mode</term>: <description>to append in binary mode rather than text mode, prepend an asterisk.</description></item>
            <item><term>Standard output (stdout)</term>: <description>specifying an asterisk (*) causes <paramref name="text"/> to be written to the console.</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileCopy(System.String,System.String,System.Int32)">
            <summary>
            Copies one or more files.
            </summary>
            <param name="source">The name of a single file or folder, or a wildcard pattern.</param>
            <param name="destination">The name or pattern of the destination.</param>
            <param name="flag">
            <list type="bullet">
            <item><term>0</term>: <description>(default) do not overwrite existing files</description></item>
            <item><term>1</term>: <description>overwrite existing files</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileCopyDir(System.String,System.String,System.Int32)">
            <summary>
            Copies a folder along with all its sub-folders and files.
            </summary>
            <param name="source">Path of the source directory.</param>
            <param name="destination">Path of the destination directory.</param>
            <param name="flag">
            <list type="bullet">
            <item><term>0</term>: <description>(default) do not overwrite existing files</description></item>
            <item><term>1</term>: <description>overwrite existing files</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileCreateDir(System.String)">
            <summary>
            Creates a directory.
            </summary>
            <param name="path">Path of the directory to create.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileCreateShortcut(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Creates a shortcut to a file.
            </summary>
            <param name="target">Path to the shortcut file.</param>
            <param name="link">The file referenced by the shortcut.</param>
            <param name="workingDir">The working directory.</param>
            <param name="args">Arguments to start <paramref name="link"/> with.</param>
            <param name="description">A summary of the shortcut.</param>
            <param name="icon"></param>
            <param name="shortcutKey">A hotkey activator.</param>
            <param name="iconNumber"></param>
            <param name="runState"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileDelete(System.String)">
            <summary>
            Deletes one or more files.
            </summary>
            <param name="pattern">The name of a file or a wildcard pattern.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileExist(System.String)">
            <summary>
            Returns the attributes of a file if it exists.
            </summary>
            <param name="pattern">The name of a file or wildcard pattern.</param>
            <returns>A blank string if no files or folders are found, otheriwse the attributes of the first match.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileGetShortcut(System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Retrieves information about a shortcut file.
            </summary>
            <param name="link"></param>
            <param name="target"></param>
            <param name="workingDir"></param>
            <param name="args"></param>
            <param name="description"></param>
            <param name="icon"></param>
            <param name="iconNumber"></param>
            <param name="runState"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileGetSize(System.Int64@,System.String,System.String)">
            <summary>
            Retrieves the size of a file.
            </summary>
            <param name="result">The name of the variable in which to store the retrieved size.</param>
            <param name="file">The name of the target file.</param>
            <param name="units">
            <para>If present, this parameter causes the result to be returned in units other than bytes:</para>
            <list type="bullet">
            <item><term>K</term>: <description>kilobytes</description></item>
            <item><term>M</term>: <description>megabytes</description></item>
            <item><term>G</term>: <description>gigabytes</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileGetTime(System.String@,System.String,System.String)">
            <summary>
            Retrieves the datetime stamp of a file or folder.
            </summary>
            <param name="result">The name of the variable in which to store the retrieved date-time in format YYYYMMDDHH24MISS in local time.</param>
            <param name="file">The name of the target file or folder.</param>
            <param name="time">
            <para>Which timestamp to retrieve:</para>
            <list type="bullet">
            <item><term>M</term>: <description>(default) modification time</description></item>
            <item><term>C</term>: <description>reation time</description></item>
            <item><term>A</term>: <description>last access time</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileGetVersion(System.String@,System.String)">
            <summary>
            Retrieves the version information of a file.
            </summary>
            <param name="result">The name of the variable in which to store the version number or string.</param>
            <param name="file">The name of the target file.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileMove(System.String,System.String,System.Int32)">
            <summary>
            Moves or renames one or more files.
            </summary>
            <param name="source">The name of a single file or a wildcard pattern.</param>
            <param name="destination">The name or pattern of the destination.</param>
            <param name="flag">
            <list type="bullet">
            <item><term>0</term>: <description>(default) do not overwrite existing files</description></item>
            <item><term>1</term>: <description>overwrite existing files</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileMoveDir(System.String,System.String,System.String)">
            <summary>
            Moves a folder along with all its sub-folders and files. It can also rename a folder.
            </summary>
            <param name="Source">Name of the source directory (with no trailing backslash), which is assumed to be in %A_WorkingDir% if an absolute path isn't specified. For example: C:\My Folder </param>
            <param name="Dest">The new path and name of the directory (with no trailing baskslash), which is assumed to be in %A_WorkingDir% if an absolute path isn't specified. For example: D:\My Folder. Note: Dest is the actual path and name that the directory will have after it is moved; it is not the directory into which Source is moved (except for the known limitation mentioned below). </param>
            <param name="Flag">
            <para>(options) Specify one of the following single characters:</para>
            <para>0 (default): Do not overwrite existing files. The operation will fail if Dest already exists as a file or directory.</para>
            <para>1: Overwrite existing files. However, any files or subfolders inside Dest that do not have a counterpart in Source will not be deleted. Known limitation: If Dest already exists as a folder and it is on the same volume as Source, Source will be moved into it rather than overwriting it. To avoid this, see the next option.</para>
            <para>2: The same as mode 1 above except that the limitation is absent.</para>
            <para>R: Rename the directory rather than moving it. Although renaming normally has the same effect as moving, it is helpful in cases where you want "all or none" behavior; that is, when you don't want the operation to be only partially successful when Source or one of its files is locked (in use). Although this method cannot move Source onto a different volume, it can move it to any other directory on its own volume. The operation will fail if Dest already exists as a file or directory.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileRead(System.Object@,System.String)">
            <summary>
            Read the contents of a file.
            </summary>
            <param name="OutputVar">The name of the variable in which to store the retrieved content.</param>
            <param name="Filename">
            <para>The file path, optionally preceded by one or more of the following options:</para>
            <list type="bullet">
            <item><term>*c</term>: <description>treat the source as binary rather than text, <paramref name="OutputVar"/> will be a byte array.</description></item>
            <item><term>*m<c>n</c></term>: <description>stop reading at <c>n</c> bytes.</description></item>
            <item><term>*t</term>: <description>replace all occurrences of <c>`r`n</c> with <c>`n</c>. This option is ignored in binary mode.</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileReadLine(System.String@,System.String,System.Int32)">
            <summary>
            Reads the specified line from a file and stores the text in a variable.
            </summary>
            <param name="OutputVar">The name of the variable in which to store the retrieved text.</param>
            <param name="Filename">The name of the file to access, which is assumed to be in %A_WorkingDir% if an absolute path isn't specified. Windows and Unix formats are supported; that is, the file's lines may end in either carriage return and linefeed (`r`n) or just linefeed (`n).</param>
            <param name="LineNum">Which line to read (1 is the first, 2 the second, and so on).</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileRecycle(System.String)">
            <summary>
            Sends a file or directory to the recycle bin, if possible.
            </summary>
            <param name="FilePattern">
            <para>The name of a single file or a wildcard pattern such as C:\Temp\*.tmp. FilePattern is assumed to be in %A_WorkingDir% if an absolute path isn't specified.</para>
            <para>To recycle an entire directory, provide its name without a trailing backslash.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileRecycleEmpty(System.String)">
            <summary>
            Empties the recycle bin.
            </summary>
            <param name="Root">If omitted, the recycle bin for all drives is emptied. Otherwise, specify a drive letter such as C:\</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileRemoveDir(System.String,System.Boolean)">
            <summary>
            Deletes a folder.
            </summary>
            <param name="Path">Name of the directory to delete, which is assumed to be in %A_WorkingDir% if an absolute path isn't specified.</param>
            <param name="Recurse">
            <list type="">
            <item>0 (default): Do not remove files and sub-directories contained in DirName. In this case, if DirName is not empty, no action will be taken and ErrorLevel will be set to 1.</item>
            <item>1: Remove all files and subdirectories (like the DOS DelTree command).</item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileSetAttrib(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Changes the attributes of one or more files or folders. Wildcards are supported.
            </summary>
            <param name="Attributes">The attributes to change (see Remarks).</param>
            <param name="FilePattern">
            <para>The name of a single file or folder, or a wildcard pattern such as C:\Temp\*.tmp. FilePattern is assumed to be in %A_WorkingDir% if an absolute path isn't specified.</para>
            <para>If omitted, the current file of the innermost enclosing File-Loop will be used instead.</para>
            </param>
            <param name="OperateOnFolders">
            <list type="">
            <item>0 (default) Folders are not operated upon (only files).</item>
            <item>1 All files and folders that match the wildcard pattern are operated upon.</item>
            <item>2 Only folders are operated upon (no files).</item>
            </list>
            <para>Note: If FilePattern is a single folder rather than a wildcard pattern, it will always be operated upon regardless of this setting.</para>
            </param>
            <param name="Recurse">
            <list type="">
            <item>0 (default) Subfolders are not recursed into.</item>
            <item>1 Subfolders are recursed into so that files and folders contained therein are operated upon if they match FilePattern. All subfolders will be recursed into, not just those whose names match FilePattern. However, files and folders with a complete path name longer than 259 characters are skipped over as though they do not exist. Such files are rare because normally, the operating system does not allow their creation.</item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileSetTime(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Changes the datetime stamp of one or more files or folders. Wildcards are supported.
            </summary>
            <param name="YYYYMMDDHH24MISS">If blank or omitted, it defaults to the current time. Otherwise, specify the time to use for the operation (see Remarks for the format). Years prior to 1601 are not supported.</param>
            <param name="FilePattern">
            <para>The name of a single file or folder, or a wildcard pattern such as C:\Temp\*.tmp. FilePattern is assumed to be in %A_WorkingDir% if an absolute path isn't specified.</para>
            <para>If omitted, the current file of the innermost enclosing File-Loop will be used instead.</para>
            </param>
            <param name="WhichTime">Which timestamp to set:
            <list type="">
            <item>M = Modification time (this is the default if the parameter is blank or omitted)</item>
            <item>C = Creation time</item>
            <item>A = Last access time </item>
            </list>
            </param>
            <param name="OperateOnFolders">
            <list type="">
            <item>0 (default) Folders are not operated upon (only files).</item>
            <item>1 All files and folders that match the wildcard pattern are operated upon.</item>
            <item>2 Only folders are operated upon (no files).</item>
            <para>Note: If FilePattern is a single folder rather than a wildcard pattern, it will always be operated upon regardless of this setting.</para>
            </list>
            </param>
            <param name="Recurse">
            <list type="">
            <item>0 (default) Subfolders are not recursed into.</item>
            <item>1 Subfolders are recursed into so that files and folders contained therein are operated upon if they match FilePattern. All subfolders will be recursed into, not just those whose names match FilePattern. However, files and folders with a complete path name longer than 259 characters are skipped over as though they do not exist. Such files are rare because normally, the operating system does not allow their creation.</item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SetWorkingDir(System.String)">
            <summary>
            Changes the script's current working directory.
            </summary>
            <param name="DirName">The name of the new working directory, which is assumed to be a subfolder of the current %A_WorkingDir% if an absolute path isn't specified.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SplitPath(System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Separates a file name or URL into its name, directory, extension, and drive.
            </summary>
            <param name="path">Name of the variable containing the file name to be analyzed.</param>
            <param name="filename">Name of the variable in which to store the file name without its path. The file's extension is included.</param>
            <param name="directory">Name of the variable in which to store the directory of the file, including drive letter or share name (if present). The final backslash is not included even if the file is located in a drive's root directory.</param>
            <param name="extension">Name of the variable in which to store the file's extension (e.g. TXT, DOC, or EXE). The dot is not included.</param>
            <param name="name">Name of the variable in which to store the file name without its path, dot and extension.</param>
            <param name="root">Name of the variable in which to store the drive letter or server name of the file. If the file is on a local or mapped drive, the variable will be set to the drive letter followed by a colon (no backslash). If the file is on a network path (UNC), the variable will be set to the share name, e.g. \\Workstation01</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Abs(System.Decimal)">
            <summary>
            Returns the absolute value of a number.
            </summary>
            <param name="n">Any number.</param>
            <returns>The magnitude of <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.ACos(System.Double)">
            <summary>
            Returns the angle whose cosine is the specified number.
            </summary>
            <param name="n">A number representing a cosine, where -1 ≤ <paramref name="n"/> ≤ 1.</param>
            <returns>An angle, θ, measured in radians, such that 0 ≤ θ ≤ π.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.ASin(System.Double)">
            <summary>
            Returns the angle whose sine is the specified number.
            </summary>
            <param name="n">A number representing a sine, where -1 ≤ <paramref name="n"/> ≤ 1.</param>
            <returns>An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.ATan(System.Double)">
            <summary>
            Returns the angle whose tangent is the specified number.
            </summary>
            <param name="n">A number representing a tangent.</param>
            <returns>An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Ceil(System.Decimal)">
            <summary>
            Returns the smallest integer greater than or equal to the specified decimal number.
            </summary>
            <param name="n">A number.</param>
            <returns>The smallest integer greater than or equal to <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Cos(System.Double)">
            <summary>
            Returns the cosine of the specified angle.
            </summary>
            <param name="n">An angle, measured in radians.</param>
            <returns>The cosine of <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Cosh(System.Double)">
            <summary>
            Returns the hyperbolic cosine of the specified angle.
            </summary>
            <param name="n">An angle, measured in radians.</param>
            <returns>The hyperbolic cosine of <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.EnvAdd(System.Double@,System.Double,System.String)">
            <summary>
            Add a value to a variable using numeric or date-time arithmetic.
            </summary>
            <param name="var">A variable.</param>
            <param name="value">A number.</param>
            <param name="units">
            To use date arithmetic specify one of the following words:
            <c>seconds</c> (<c>s</c>), <c>minutes</c> (<c>m</c>), <c>hours</c> (<c>h</c>), <c>days</c> (<c>d</c>), <c>months</c> or <c>years</c> (<c>y</c>).
            If this parameter is blank the functions performs a numeric addition.
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.EnvSub(System.Double@,System.Double,System.String)">
            <summary>
            See <see cref="M:IronAHK.Rusty.Core.EnvAdd(System.Double@,System.Double,System.String)"/>.
            </summary>
            <param name="var">A variable.</param>
            <param name="value">A value.</param>
            <param name="units">A numeric unit.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Exp(System.Double)">
            <summary>
            Returns <c>e</c> raised to the specified power.
            </summary>
            <param name="n">A number specifying a power.</param>
            <returns>The number <c>e</c> raised to the power <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Floor(System.Decimal)">
            <summary>
            Returns the largest integer less than or equal to the specified decimal number.
            </summary>
            <param name="n">A number.</param>
            <returns>The largest integer less than or equal to <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Ln(System.Double)">
            <summary>
            Returns the natural (base e) logarithm of a specified number.
            </summary>
            <param name="n">A number whose logarithm is to be found.</param>
            <returns>The natural logarithm of <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Log(System.Double,System.Double)">
            <summary>
            Returns the logarithm of a specified number in a specified base.
            </summary>
            <param name="n">A number whose logarithm is to be found.</param>
            <param name="b">The base of the logarithm. If unspecified this is <c>10</c>.</param>
            <returns>The logarithm of <paramref name="n"/> to base <paramref name="b"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Mod(System.Decimal,System.Decimal)">
            <summary>
            Returns the remainder after dividing two numbers.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The remainder after dividing <paramref name="dividend"/> by <paramref name="divisor"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Random(System.Double@,System.Double,System.Double)">
            <summary>
            Returns a random number within a specified range.
            </summary>
            <param name="result">The name of the variable in which to store the result.</param>
            <param name="min">The inclusive lower bound of the random number returned.</param>
            <param name="max">The exclusive upper bound of the random number returned.</param>
            <remarks>If <paramref name="min"/> and <paramref name="max"/> are both integers <paramref name="result"/> will also be an integer.
            Otherwise <paramref name="result"/> can be a floating point number.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.Remainder(System.Double,System.Double)">
            <summary>
            Returns the remainder resulting from the division of a specified number by another specified number.
            </summary>
            <param name="x">A dividend.</param>
            <param name="y">A divisor.</param>
            <returns>A number equal to <c><paramref name="x"/> - (<paramref name="y"/> Q)</c>,
            where <c>Q</c> is the quotient of <c><paramref name="x"/> / <paramref name="y"/></c> rounded to
            the nearest integer (if <c><paramref name="x"/> / y</c> falls halfway between two integers, the even integer is returned).
            
            If <c><paramref name="x"/> - (<paramref name="y"/> Q)</c> is zero, the value <c>0</c> is returned.
            
            If <c><paramref name="y"/> = 0</c>, <c>0</c> is returned.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Round(System.Decimal,System.Int32)">
            <summary>
            Rounds a number to a specified number of fractional digits.
            </summary>
            <param name="n">A decimal number to be rounded.</param>
            <param name="decimals">The number of decimal places in the return value.</param>
            <returns>The number nearest to <paramref name="n"/> that contains a number of fractional digits equal to <paramref name="decimals"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Sin(System.Double)">
            <summary>
            Returns the sine of the specified angle.
            </summary>
            <param name="n">An angle, measured in radians.</param>
            <returns>The sine of <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Sinh(System.Double)">
            <summary>
            Returns the hyperbolic sine of the specified angle.
            </summary>
            <param name="n">An angle, measured in radians.</param>
            <returns>The hyperbolic sine of <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Sqrt(System.Double)">
            <summary>
            Returns the square root of a specified number.
            </summary>
            <param name="n">A number.</param>
            <returns>The positive square root of <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Tan(System.Double)">
            <summary>
            Returns the tangent of the specified angle.
            </summary>
            <param name="n">An angle, measured in radians.</param>
            <returns>The tangent of <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Tanh(System.Double)">
            <summary>
            Returns the hyperbolic tangent of the specified angle.
            </summary>
            <param name="n">An angle, measured in radians.</param>
            <returns>The hyperbolic tangent of <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Truncate(System.Decimal)">
            <summary>
            Calculates the integral part of a specified number.
            </summary>
            <param name="n">A number to truncate.</param>
            <returns>The integral part of <paramref name="n"/>; that is, the number that remains after any fractional digits have been discarded.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Asc(System.String,System.Int32)">
            <summary>
            Returns the Unicode value (an integer between 1 and 65535) for the specified character in a string.
            </summary>
            <param name="str">A string.</param>
            <param name="n">The zero-based character position in the string.
            If this is blank it is assumed to be <c>0</c>.</param>
            <returns>The Unicode value.
            If <paramref name="str"/> is empty or <paramref name="n"/> is specified out of bounds, <c>0</c> is returned.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Base64Encode(System.Object)">
            <summary>
            Encodes binary data to a base 64 character string.
            </summary>
            <param name="value">The data to encode.</param>
            <returns>A base 64 string representation of the given binary data.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Base64Decode(System.String)">
            <summary>
            Decodes a base 64 character string to binary data.
            </summary>
            <param name="s">The base 64 string to decode.</param>
            <returns>A binary byte array of the given sequence.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Chr(System.Int32)">
            <summary>
            Returns the single character corresponding to a Unicode value.
            </summary>
            <param name="n">A Unicode value.</param>
            <returns>A Unicode character whose value is <paramref name="n"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.FormatTime(System.String@,System.String,System.String)">
            <summary>
            Transforms a YYYYMMDDHH24MISS timestamp into the specified date/time format.
            </summary>
            <param name="output">The variable to store the result.</param>
            <param name="stamp">Leave this parameter blank to use the current local date and time.
            Otherwise, specify all or the leading part of a timestamp in the YYYYMMDDHH24MISS format.</param>
            <param name="format">
            <para>If omitted, it defaults to the time followed by the long date,
            both of which will be formatted according to the current user's locale.</para>
            <para>Otherwise, specify one or more of the date-time formats,
            along with any literal spaces and punctuation in between.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.HexEncode(System.Object)">
            <summary>
            Encodes binary data to a hexadecimal string.
            </summary>
            <param name="value">The data to encode.</param>
            <returns>A hexadecimal string representation of the given binary data.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.HexDecode(System.String)">
            <summary>
            Decodes a hexadecimal string to binary data.
            </summary>
            <param name="hex">The hexadecimal string to decode.</param>
            <returns>A binary byte array of the given sequence.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.InStr(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Returns the position of the first or last occurrence of the specified substring within a string.
            </summary>
            <param name="input">The string to check.</param>
            <param name="needle">The substring to search for.</param>
            <param name="caseSensitive"><c>true</c> to use a case sensitive comparison, <c>false</c> otherwise.</param>
            <param name="index">The one-based starting character position.
            Specify zero or leave blank to search in reverse, i.e. right to left.</param>
            <returns>The one-based index of the position of <paramref name="needle"/> in <paramref name="input"/>.
            A value of zero indicates no match.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.RegExMatch(System.String,System.String,System.String[]@,System.Int32)">
            <summary>
            Determines whether a string contains a pattern (regular expression).
            </summary>
            <param name="input">The input string.</param>
            <param name="needle">The pattern to search for, which is a regular expression.</param>
            <param name="output">The variable to store the result.</param>
            <param name="index">The one-based starting character position.
            If this is less than one it is considered an offset from the end of the string.</param>
            <returns>The one-based index of the position of the first match.
            A value of zero indicates no match.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.RegExReplace(System.String,System.String,System.String,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Replaces occurrences of a pattern (regular expression) inside a string.
            </summary>
            <param name="input">The input string.</param>
            <param name="needle">The pattern to search for, which is a regular expression.</param>
            <param name="replace">The string to replace <paramref name="needle"/>.</param>
            <param name="count">The variable to store the number of replacements that occurred.</param>
            <param name="limit">The maximum number of replacements to perform.
            If this is below one all matches will be replaced.</param>
            <param name="index">The one-based starting character position.
            If this is less than one it is considered an offset from the end of the string.</param>
            <returns>The new string.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Sort(System.String@,System.String[])">
            <summary>
            Arranges a variable's contents in alphabetical, numerical, or random order optionally removing duplicates.
            </summary>
            <param name="input">The variable whose contents to use as the input.</param>
            <param name="options">See the remarks.</param>
            <remarks>
            <list type="table">
            <listheader>
            <term>Name</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>C</term>
            <description>Case sensitive.</description>
            </item>
            <item>
            <term>CL</term>
            <description>Case sensitive based on current user's locale.</description>
            </item>
            <item>
            <term>D<c>x</c></term>
            <description>Specifies <c>x</c> as the delimiter character which is <c>`n</c> by default.</description>
            </item>
            <item>
            <term>F <c>name</c></term>
            <description>Use the return value of the specified function for comparing two items.</description>
            </item>
            <item>
            <term>N</term>
            <description>Numeric sorting.</description>
            </item>
            <item>
            <term>P<c>n</c></term>
            <description>Sorts items based on character position <c>n</c>.</description>
            </item>
            <item>
            <term>R</term>
            <description>Sort in reverse order.</description>
            </item>
            <item>
            <term>Random</term>
            <description>Sort in random order.</description>
            </item>
            <item>
            <term>U</term>
            <description>Remove any duplicate items.</description>
            </item>
            <item>
            <term>Z</term>
            <description>Considers a trailing delimiter as a boundary which otherwise would be ignored.</description>
            </item>
            <item>
            <term>\</term>
            <description>File path sorting.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.StrLen(System.String)">
            <summary>
            Returns the length of a string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The total length of the string, including any invisbile characters such as null.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.StringLower(System.String@,System.String@,System.Boolean)">
            <summary>
            Converts a string to lowercase.
            </summary>
            <param name="output">The variable to store the result.</param>
            <param name="input">The variable whose contents to use as the input.</param>
            <param name="title"><c>true</c> to use title casing, <c>false</c> otherwise.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.StringReplace(System.String@,System.String@,System.String,System.String,System.Boolean)">
            <summary>
            Replaces the specified substring with a new string.
            </summary>
            <param name="output">The variable to store the result.</param>
            <param name="input">The variable whose contents to use as the input.</param>
            <param name="search">The substring to search for.</param>
            <param name="replace">The string to replace <paramref name="search"/>.</param>
            <param name="all"><c>true</c> to replace all instances, <c>false</c> otherwise.</param>
            <remarks>If <paramref name="all"/> is true and <see cref="P:IronAHK.Rusty.Core.A_StringCaseSense"/> is on a faster replacement algorithm is used.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.StringSplit(System.String[]@,System.String@,System.String,System.String)">
            <summary>
            Separates a string into an array of substrings using the specified delimiters.
            </summary>
            <param name="output">The variable to store the result.</param>
            <param name="input">The variable whose contents to use as the input.</param>
            <param name="delimiters">One or more characters (case sensitive), each of which is used to determine
            where the boundaries between substrings occur in <paramref name="input"/>.
            If this is blank each character of <paramref name="input"/> will be treated as a substring.</param>
            <param name="trim">An optional list of characters (case sensitive) to exclude from the beginning and end of each array element.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.StringUpper(System.String@,System.String@,System.Boolean)">
            <summary>
            Converts a string to uppercase.
            </summary>
            <param name="output">The variable to store the result.</param>
            <param name="input">The variable whose contents to use as the input.</param>
            <param name="title"><c>true</c> to use title casing, <c>false</c> otherwise.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SubStr(System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves one or more characters from the specified position in a string.
            </summary>
            <param name="input">The string to use.</param>
            <param name="index">The one-based starting character position.
            If this is less than one it is considered an offset from the end of the string.</param>
            <param name="length">The maximum number of characters to retrieve.
            Leave this parameter blank to return the entire leading part of the string.
            Specify a negative value to omit that many characters from the end of the string.</param>
            <returns>The new substring.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Transform(System.String@,System.String,System.String,System.String)">
            <summary>
            Performs miscellaneous math functions, bitwise operations, and tasks such as ASCII to Unicode conversion.
            This function is obsolete, please use the related newer syntax.
            <seealso cref="M:IronAHK.Rusty.Core.Asc(System.String,System.Int32)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Chr(System.Int32)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Mod(System.Decimal,System.Decimal)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Exp(System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Sqrt(System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Log(System.Double,System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Ln(System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Round(System.Decimal,System.Int32)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Ceil(System.Decimal)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Floor(System.Decimal)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Abs(System.Decimal)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Sin(System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Cos(System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Tan(System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.ASin(System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.ACos(System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.ATan(System.Double)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Floor(System.Decimal)"/>
            <seealso cref="M:IronAHK.Rusty.Core.Floor(System.Decimal)"/>
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Core.Menu(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates, deletes, modifies and displays menus and menu items.
            </summary>
            <param name="MenuName"></param>
            <param name="Cmd"></param>
            <param name="P3"></param>
            <param name="P4"></param>
            <param name="P5"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.GetHostEntry(System.String)">
            <summary>
            Resolves a host name or IP address.
            </summary>
            <param name="name">The host name.</param>
            <returns>A dictionary with the following key/value pairs:
            <list type="bullet">
            <item><term>Host</term>: <description>the host name.</description></item>
            <item><term>Addresses</term>: <description>the list of IP addresses.</description></item>
            </list>
            </returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.Mail(System.Object,System.String,System.String,System.Collections.IDictionary)">
            <summary>
            Sends an email.
            </summary>
            <param name="recipients">A list of receivers of the message.</param>
            <param name="subject">Subject of the message.</param>
            <param name="message">Message body.</param>
            <param name="options">A dictionary with any the following optional key/value pairs:
            <list type="bullet">
            <item><term>Attachments</term>: <description>a list of file paths to send as attachments.</description></item>
            <item><term>Bcc</term>: <description>a list of blind carbon copy recipients.</description></item>
            <item><term>CC</term>: <description>a list of carbon copy recipients.</description></item>
            <item><term>From</term>: <description>the from address.</description></item>
            <item><term>ReplyTo</term>: <description>the reply address.</description></item>
            <item><term>Host</term>: <description>the SMTP client hostname and port.</description></item>
            <item><term>(Header)</term>: <description>any additional header and corresponding value.</description></item>
            </list>
            </param>
            <remarks><see cref="P:IronAHK.Rusty.Core.ErrorLevel"/> is set to <c>1</c> if there was a problem, <c>0</c> otherwise.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.URLDownloadToFile(System.String,System.String)">
            <summary>
            Downloads a resource from the internet to a file.
            </summary>
            <param name="url">The URL from which to download data.</param>
            <param name="filename">The file path to receive the data.
            Any existing file will be overwritten.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.UriDownload(System.String,System.String)">
            <summary>
            Downloads a resource from the internet.
            </summary>
            <param name="address">The URI (or URL) of the resource.</param>
            <param name="filename">The file path to receive the downloaded data. An existing file will be overwritten.
            Leave blank to return the data as a string.
            </param>
            <returns>The downloaded data if <paramref name="filename"/> is blank, otherwise an empty string.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.JsonDecode(System.String)">
            <summary>
            Converts a JSON encoded string into an associative array.
            </summary>
            <param name="source">The string to decode.</param>
            <returns>An associative array.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.JsonEncode(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Returns a string containing the JSON representation of <paramref name="data"/>.
            </summary>
            <param name="data">The associative array to encode.</param>
            <returns>A JSON encoded string.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileSelectFile(System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            Displays a standard dialog that allows the user to open or save files.
            </summary>
            <param name="OutputVar">The user selected files.</param>
            <param name="Options">
            <list type="bullet">
            <item><term>M</term>: <description>allow muliple files to be selected.</description></item>
            <item><term>S</term>: <description>show a save as dialog rather than a file open dialog.</description></item>
            <item><term>1</term>: <description>only allow existing file or directory paths.</description></item>
            <item><term>8</term>: <description>prompt to create files.</description></item>
            <item><term>16:</term>: <description>prompt to overwrite files.</description></item>
            <item><term>32</term>: <description>follow the target of a shortcut rather than using the shortcut file itself.</description></item>
            </list>
            </param>
            <param name="RootDir">The file path to initially select.</param>
            <param name="Prompt">Text displayed in the window to instruct the user what to do.</param>
            <param name="Filter">Indicates which types of files are shown by the dialog, e.g. <c>Audio (*.wav; *.mp2; *.mp3)</c>.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.FileSelectFolder(System.String@,System.String,System.Int32,System.String)">
            <summary>
            Displays a standard dialog that allows the user to select a folder.
            </summary>
            <param name="OutputVar">The user selected folder.</param>
            <param name="StartingFolder">An asterisk followed by a path to initially select a folder, can be left blank for none.</param>
            <param name="Options">
            <list type="bullet">
            <item><term>1</term>: <description>show a new folder button in the dialog.</description></item>
            </list>
            </param>
            <param name="Prompt">Text displayed in the window to instruct the user what to do.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.InputBox(System.String@,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Displays an input box to ask the user to enter a string.
            </summary>
            <param name="OutputVar">The name of the variable in which to store the text entered by the user.</param>
            <param name="Title">The title of the input box. If blank or omitted, it defaults to the name of the script.</param>
            <param name="Prompt">The text of the input box, which is usually a message to the user indicating what kind of input is expected.</param>
            <param name="Hide">If this parameter is the word HIDE, the user's input will be masked, which is useful for passwords.</param>
            <param name="Width">If this parameter is blank or omitted, the starting width of the window will be 375.</param>
            <param name="Height">If this parameter is blank or omitted, the starting height of the window will be 189.</param>
            <param name="X">The X coordinate of the window (use 0,0 to move it to the upper left corner of the desktop). If either coordinate is blank or omitted, the dialog will be centered in that dimension. Either coordinate can be negative to position the window partially or entirely off the desktop.</param>
            <param name="Y">The Y coordinate of the window (see <paramref name="X"/>).</param>
            <param name="Font">Not yet implemented (leave blank). In the future it might accept something like verdana:8</param>
            <param name="Timeout">Timeout in seconds (can contain a decimal point).  If this value exceeds 2147483 (24.8 days), it will be set to 2147483. After the timeout has elapsed, the InputBox window will be automatically closed and ErrorLevel will be set to 2. OutputVar will still be set to what the user entered.</param>
            <param name="Default">A string that will appear in the InputBox's edit field when the dialog first appears. The user can change it by backspacing or other means.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.MsgBox(System.String)">
            <summary>
            Show a message box.
            </summary>
            <param name="Text">The text to show in the prompt.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.MsgBox(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Displays the specified text in a small window containing one or more buttons (such as Yes and No).
            </summary>
            <param name="Options">
            <para>Indicates the type of message box and the possible button combinations. If blank or omitted, it defaults to 0. See the table below for allowed values.</para>
            <para>This parameter will not be recognized if it contains an expression or a variable reference such as %option%. Instead, use a literal numeric value.</para>
            </param>
            <param name="Title">The title of the message box window. If omitted or blank, it defaults to the name of the script (without path).</param>
            <param name="Text">
            <para>If all the parameters are omitted, the MsgBox will display the text "Press OK to continue." Otherwise, this parameter is the text displayed inside the message box to instruct the user what to do, or to present information.</para>
            <para>Escape sequences can be used to denote special characters. For example, `n indicates a linefeed character, which ends the current line and begins a new one. Thus, using text1`n`ntext2 would create a blank line between text1 and text2.</para>
            <para>If Text is long, it can be broken up into several shorter lines by means of a continuation section, which might improve readability and maintainability.</para>
            </param>
            <param name="Timeout">
            <para>(optional) Timeout in seconds (can contain a decimal point but cannot be an expression).  If this value exceeds 2147483 (24.8 days), it will be set to 2147483.  After the timeout has elapsed the message box will be automatically closed and the IfMsgBox command will see the value TIMEOUT.</para>
            <para>Known limitation: If the MsgBox contains only an OK button, IfMsgBox will think that the OK button was pressed if the MsgBox times out while its own thread is interrupted by another.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Progress(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates or updates a window containing a progress bar or an image.
            </summary>
            <param name="ProgressParam1">
            <para>If the progress window already exists: If Param1 is the word OFF, the window is destroyed. If Param1 is the word SHOW, the window is shown if it is currently hidden.</para>
            <para>Otherwise, if Param1 is an pure number, its bar's position is changed to that value. If Param1 is blank, its bar position will be unchanged but its text will be updated to reflect any new strings provided in SubText, MainText, and WinTitle. In both of these modes, if the window doesn't yet exist, it will be created with the defaults for all options.</para>
            <para>If the progress window does not exist: A new progress window is created (replacing any old one), and Param1 is a string of zero or more options from the list below.</para>
            </param>
            <param name="SubText">The text to display below the image or bar indicator. Although word-wrapping will occur, to begin a new line explicitly, use linefeed (`n). To set an existing window's text to be blank, specify %A_Space%. For the purpose of auto-calculating the window's height, blank lines can be reserved in a way similar to MainText below.</param>
            <param name="MainText">
            <para>The text to display above the image or bar indicator (its font is semi-bold). Although word-wrapping will occur, to begin a new line explicitly, use linefeed (`n).</para>
            <para>If blank or omitted, no space will be reserved in the window for MainText. To reserve space for single line to be added later, or to set an existing window's text to be blank, specify %A_Space%. To reserve extra lines beyond the first, append one or more linefeeds (`n).</para>
            <para>Once the height of MainText's control area has been set, it cannot be changed without recreating the window.</para>
            </param>
            <param name="WinTitle">The text to display below the image or bar indicator. Although word-wrapping will occur, to begin a new line explicitly, use linefeed (`n). To set an existing window's text to be blank, specify %A_Space%. For the purpose of auto-calculating the window's height, blank lines can be reserved in a way similar to MainText below.</param>
            <param name="FontName">
            <para>The name of the font to use for both MainText and SubText. The font table lists the fonts included with the various versions of Windows. If unspecified or if the font cannot be found, the system's default GUI font will be used.</para>
            <para>See the options section below for how to change the size, weight, and color of the font.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SplashImage(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates or updates a window containing a progress bar or an image.
            </summary>
            <param name="ImageFile">
            <para>If this is the word OFF, the window is destroyed. If this is the word SHOW, the window is shown if it is currently hidden.</para>
            <para>Otherwise, this is the file name of the BMP, GIF, or JPG image to display (to display other file formats such as PNG, TIF, and ICO, consider using the Gui command to create a window containing a picture control).</para>
            <para>ImageFile is assumed to be in %A_WorkingDir% if an absolute path isn't specified. If ImageFile and Options are blank and the window already exists, its image will be unchanged but its text will be updated to reflect any new strings provided in SubText, MainText, and WinTitle.</para>
            <para>For newly created windows, if ImageFile is blank or there is a problem loading the image, the window will be displayed without the picture.</para>
            </param>
            <param name="Options">A string of zero or more options from the list further below.</param>
            <param name="SubText">The text to display below the image or bar indicator. Although word-wrapping will occur, to begin a new line explicitly, use linefeed (`n). To set an existing window's text to be blank, specify %A_Space%. For the purpose of auto-calculating the window's height, blank lines can be reserved in a way similar to MainText below.</param>
            <param name="MainText">
            <para>The text to display above the image or bar indicator (its font is semi-bold). Although word-wrapping will occur, to begin a new line explicitly, use linefeed (`n).</para>
            <para>If blank or omitted, no space will be reserved in the window for MainText. To reserve space for single line to be added later, or to set an existing window's text to be blank, specify %A_Space%. To reserve extra lines beyond the first, append one or more linefeeds (`n).</para>
            <para>Once the height of MainText's control area has been set, it cannot be changed without recreating the window.</para>
            </param>
            <param name="WinTitle">The title of the window. If omitted and the window is being newly created, the title defaults to the name of the script (without path). If the B (borderless) option has been specified, there will be no visible title bar but the window can still be referred to by this title in commands such as WinMove.</param>
            <param name="FontName">
            <para>The name of the font to use for both MainText and SubText. The font table lists the fonts included with the various versions of Windows. If unspecified or if the font cannot be found, the system's default GUI font will be used.</para>
            <para>See the options section below for how to change the size, weight, and color of the font.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.RegDelete(System.String,System.String,System.String)">
            <summary>
            Deletes a subkey or value from the registry.
            </summary>
            <param name="RootKey">Must be either HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT, or HKEY_CURRENT_CONFIG (or the abbreviations for each of these, such as HKLM). To access a remote registry, prepend the computer name and a colon, as in this example: \\workstation01:HKEY_LOCAL_MACHINE</param>
            <param name="SubKey">The name of the subkey (e.g. Software\SomeApplication).</param>
            <param name="ValueName">The name of the value to delete. If omitted, the entire SubKey will be deleted. To delete Subkey's default value -- which is the value displayed as "(Default)" by RegEdit -- use the phrase AHK_DEFAULT for this parameter.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.RegRead(System.String@,System.String,System.String,System.String)">
            <summary>
            Reads a value from the registry.
            </summary>
            <param name="OutputVar">The name of the variable in which to store the retrieved value. If the value cannot be retrieved, the variable is made blank and ErrorLevel is set to 1.</param>
            <param name="RootKey">Must be either HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT, or HKEY_CURRENT_CONFIG (or the abbreviations for each of these, such as HKLM). To access a remote registry, prepend the computer name and a colon, as in this example: \\workstation01:HKEY_LOCAL_MACHINE</param>
            <param name="SubKey">The name of the subkey (e.g. Software\SomeApplication).</param>
            <param name="ValueName">The name of the value to retrieve. If omitted, Subkey's default value will be retrieved, which is the value displayed as "(Default)" by RegEdit. If there is no default value (that is, if RegEdit displays "value not set"), OutputVar is made blank and ErrorLevel is set to 1.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.RegWrite(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Writes a value to the registry.
            </summary>
            <param name="ValueType">Must be either REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD, or REG_BINARY.</param>
            <param name="RootKey">Must be either HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT, or HKEY_CURRENT_CONFIG (or the abbreviations for each of these, such as HKLM). To access a remote registry, prepend the computer name and a colon, as in this example: \\workstation01:HKEY_LOCAL_MACHINE</param>
            <param name="SubKey">The name of the subkey (e.g. Software\SomeApplication). If SubKey does not exist, it is created (along with its ancestors, if necessary). If SubKey is left blank, the value is written directly into RootKey (though some operating systems might refuse to write in HKEY_CURRENT_USER's top level).</param>
            <param name="ValueName">The name of the value that will be written to. If blank or omitted, Subkey's default value will be used, which is the value displayed as "(Default)" by RegEdit.</param>
            <param name="Value">The value to be written. If omitted, it will default to an empty (blank) string, or 0, depending on ValueType.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ImageSearch(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Searches a region of the screen for an image.
            </summary>
            <param name="OutputVarX">
            The X and Y coordinates of the upper left corner of the rectangle to search, which can be expressions. Coordinates are relative to the active window unless CoordMode was used to change that.
            </param>
            <param name="OutputVarY">See <paramref name="OutputVarX"/>.</param>
            <param name="X1">The X and Y coordinates of the upper left corner of the rectangle to search, which can be expressions. Coordinates are relative to the active window unless CoordMode was used to change that.</param>
            <param name="Y1">See <paramref name="X1"/>.</param>
            <param name="X2">The X and Y coordinates of the lower right corner of the rectangle to search, which can be expressions. Coordinates are relative to the active window unless CoordMode was used to change that.</param>
            <param name="Y2">See <paramref name="X2"/>.</param>
            <param name="OptionsImageFile">
            <para>The file name of an image, which is assumed to be in %A_WorkingDir% if an absolute path isn't specified. All operating systems support GIF, JPG, BMP, ICO, CUR, and ANI images (BMP images must be 16-bit or higher). Other sources of icons include the following types of files: EXE, DLL, CPL, SCR, and other types that contain icon resources. On Windows XP or later, additional image formats such as PNG, TIF, Exif, WMF, and EMF are supported. Operating systems older than XP can be given support by copying Microsoft's free GDI+ DLL into the AutoHotkey.exe folder (but in the case of a compiled script, copy the DLL into the script's folder). To download the DLL, search for the following phrase at www.microsoft.com: gdi redistributable</para>
            <para>Options: Zero or more of the following strings may be also be present immediately before the name of the file. Separate each option from the next with a single space or tab. For example: *2 *w100 *h-1 C:\Main Logo.bmp</para>
            <para>*IconN: To use an icon group other than the first one in the file, specify *Icon followed immediately by the number of the group. For example, *Icon2 would load the default icon from the second icon group.</para>
            <para>*n (variation): Specify for n a number between 0 and 255 (inclusive) to indicate the allowed number of shades of variation in either direction for the intensity of the red, green, and blue components of each pixel's color. For example, *2 would allow two shades of variation. This parameter is helpful if the coloring of the image varies slightly or if ImageFile uses a format such as GIF or JPG that does not accurately represent an image on the screen. If you specify 255 shades of variation, all colors will match. The default is 0 shades.</para>
            <para>*TransN: This option makes it easier to find a match by specifying one color within the image that will match any color on the screen. It is most commonly used to find PNG, GIF, and TIF files that have some transparent areas (however, icons do not need this option because their transparency is automatically supported). For GIF files, *TransWhite might be most likely to work. For PNG and TIF files, *TransBlack might be best. Otherwise, specify for N some other color name or RGB value (see the color chart for guidance, or use PixelGetColor in its RGB mode). Examples: *TransBlack, *TransFFFFAA, *Trans0xFFFFAA</para>
            <para>*wn and *hn: Width and height to which to scale the image (this width and height also determines which icon to load from a multi-icon .ICO file). If both these options are omitted, icons loaded from ICO, DLL, or EXE files are scaled to the system's default small-icon size, which is usually 16 by 16 (you can force the actual/internal size to be used by specifying *w0 *h0). Images that are not icons are loaded at their actual size. To shrink or enlarge the image while preserving its aspect ratio, specify -1 for one of the dimensions and a positive number for the other. For example, specifying *w200 *h-1 would make the image 200 pixels wide and cause its height to be set automatically.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.PixelGetColor(System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the color of the pixel at the specified x,y screen coordinates.
            </summary>
            <param name="OutputVar">The name of the variable in which to store the color ID in hexadecimal blue-green-red (BGR) format. For example, the color purple is defined 0x800080 because it has an intensity of 80 for its blue and red components but an intensity of 00 for its green component.</param>
            <param name="X">The X coordinate of the pixel, which can be expressions. Coordinates are relative to the active window unless CoordMode was used to change that.</param>
            <param name="Y">The Y coordinate of the pixel, see <paramref name="X"/>.</param>
            <param name="Color">
            <para>This parameter may contain following words.</para>
            <para>R: Retrieve Red color</para>
            <para>G: Retrieve Green color</para>
            <para>B: Retrieves Blue color</para>
            <para>All: Retrieves RGB color</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.PixelSearch(System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Searches a region of the screen for a pixel of the specified color.
            </summary>
            <param name="OutputVarX">
            <para>The names of the variables in which to store the X and Y coordinates of the first pixel that matches ColorID (if no match is found, the variables are made blank). Coordinates are relative to the active window unless CoordMode was used to change that.</para>
            <para>Either or both of these parameters may be left blank, in which case ErrorLevel (see below) can be used to determine whether a match was found.</para>
            </param>
            <param name="OutputVarY">See <paramref name="OutputVarX"/>.</param>
            <param name="X1">The X and Y coordinates of the upper left corner of the rectangle to search, which can be expressions. Coordinates are relative to the active window unless CoordMode was used to change that.</param>
            <param name="Y1">See <paramref name="X1"/>.</param>
            <param name="X2">The X and Y coordinates of the lower right corner of the rectangle to search, which can be expressions. Coordinates are relative to the active window unless CoordMode was used to change that.</param>
            <param name="Y2">See <paramref name="X2"/>.</param>
            <param name="ColorID">The decimal or hexadecimal color ID to search for, in Blue-Green-Red (BGR) format, which can be an expression. Color IDs can be determined using Window Spy (accessible from the tray menu) or via PixelGetColor. For example: 0x9d6346</param>
            <param name="Variation">A number between 0 and 255 (inclusive) to indicate the allowed number of shades of variation in either direction for the intensity of the red, green, and blue components of the color (can be an expression). This parameter is helpful if the color sought is not always exactly the same shade. If you specify 255 shades of variation, all colors will match. The default is 0 shades.</param>
            <param name="Fast_RGB">
            <para>This parameter may contain the word Fast, RGB, or both (if both are present, separate them with a space; that is, Fast RGB).</para>
            <para>Fast: Uses a faster searching method that in most cases dramatically reduces the amount of CPU time used by the search. Although color depths as low as 8-bit (256-color) are supported, the fast mode performs much better in 24-bit or 32-bit color. If the screen's color depth is 16-bit or lower, the Variation parameter might behave slightly differently in fast mode than it does in slow mode. Finally, the fast mode searches the screen row by row (top down) instead of column by column. Therefore, it might find a different pixel than that of the slow mode if there is more than one matching pixel.</para>
            <para>RGB: Causes ColorID to be interpreted as an RGB value instead of BGR. In other words, the red and blue components are swapped.</para>
            <para>ARGB: Causes ColorID to be interpreted as an ARGB value instead of BGR. In other words, the red and blue components are swapped and also alpha chanel is recognized.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Loop(System.Int32)">
            <summary>
            Perform a series of commands repeatedly: either the specified number of times or until break is encountered.
            </summary>
            <param name="n">How many times (iterations) to perform the loop.</param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LoopParse(System.String,System.String,System.String)">
            <summary>
            Retrieves substrings (fields) from a string, one at a time.
            </summary>
            <param name="input">The string to parse.</param>
            <param name="delimiters">One of the following:
            <list>
            <item>the word <code>CSV</code> to parse in comma seperated value format;</item>
            <item>a sequence of characters to treat as delimiters;</item>
            <item>blank to parse each character of the string.</item>
            </list>
            </param>
            <param name="omit">An optional list of characters (case sensitive) to exclude from the beginning and end of each substring.</param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LoopRead(System.String,System.String)">
            <summary>
            Retrieves the lines in a text file, one at a time.
            </summary>
            <param name="input">The name of the text file whose contents will be read by the loop.</param>
            <param name="output">The optional name of the file to be kept open for the duration of the loop.</param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LoopFile(System.String,System.Int32,System.Boolean)">
            <summary>
            Retrieves the specified files or folders, one at a time.
            </summary>
            <param name="pattern">The name of a single file or folder, or a wildcard pattern.</param>
            <param name="folders">One of the following digits, or blank to use the default:
            <list>
            <item><code>1</code> (default) folders are not retrieved (only files);</item>
            <item><code>1</code> all files and folders that match the wildcard pattern are retrieved;</item>
            <item><code>2</code> only folders are retrieved (no files).</item>
            </list>
            </param>
            <param name="recurse"><code>1</code> to recurse into subfolders, <code>0</code> otherwise.</param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LoopRegistry(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Retrieves the contents of the specified registry subkey, one item at a time.
            </summary>
            <param name="root">Must be either HKEY_LOCAL_MACHINE (or HKLM), HKEY_USERS (or HKU), HKEY_CURRENT_USER (or HKCU), HKEY_CLASSES_ROOT (or HKCR), or HKEY_CURRENT_CONFIG (or HKCC).</param>
            <param name="key">The name of the key (e.g. Software\SomeApplication). If blank or omitted, the contents of RootKey will be retrieved.</param>
            <param name="subkeys">
            <list>
            <item><code>1</code> subkeys contained within Key are not retrieved (only the values);</item>
            <item><code>1</code> all values and subkeys are retrieved;</item>
            <item><code>2</code> only the subkeys are retrieved (not the values).</item>
            </list>
            </param>
            <param name="recurse"><code>1</code> to recurse into subkeys, <code>0</code> otherwise.</param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LoopEach(System.Object)">
            <summary>
            Retrieves each element of an array with its key if any.
            </summary>
            <param name="array">An array or object.</param>
            <returns>The current element.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.SB_SetIcon(System.String,System.Int32,System.Int32)">
            <summary>
            Displays a small icon to the left of the text in the specified part (if PartNumber is omitted, it defaults to 1). Filename is the name of an icon (.ICO), cursor (.CUR), or animated cursor (.ANI) file (animated cursors will not actually be animated in the bar). Other sources of icons include the following types of files: EXE, DLL, CPL, SCR, and other types that contain icon resources. To use an icon group other than the first one in the file, specify its number for IconNumber. For example, SB_SetIcon("Shell32.dll", 2) would use the default icon from the second icon group. SB_SetIcon() returns the icon's HICON upon success and 0 upon failure. The HICON is a system resource that can be safely ignored by most scripts because it is destroyed automatically when the status bar's window is destroyed. Similarly, any old icon is destroyed when SB_SetIcon() replaces it with a new one.
            </summary>
            <param name="Filename"></param>
            <param name="IconNumber"></param>
            <param name="PartNumber"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SB_SetParts(System.Object[])">
            <summary>
            Divides the bar into multiple sections according to the specified widths (in pixels). If all parameters are omitted, the bar is restored to having only a single, long part. Otherwise, specify the width of each part except the last (the last will fill the remaining width of the bar). For example, SB_SetParts(50, 50) would create three parts: the first two of width 50 and the last one of all the remaining width. Note: Any parts "deleted" by SB_SetParts() will start off with no text the next time they are shown (furthermore, their icons are automatically destroyed). Upon success, SB_SetParts() returns a non-zero value (the status bar's HWND). Upon failure it returns 0.
            </summary>
            <param name="WidthN"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SB_SetText(System.String,System.Int32,System.Int32)">
            <summary>
            Displays NewText in the specified part of the status bar. If PartNumber is omitted, it defaults to 1. Otherwise, specify an integer between 1 and 256. If Style is omitted, it defaults to 0, which uses a traditional border that makes that part of the bar look sunken. Otherwise, specify 1 to have no border or 2 to have border that makes that part of the bar look raised. Finally, up to two tab characters (`t) may be present anywhere in NewText: anything to the right of the first tab is centered within the part, and anything to the right of the second tab is right-justified. SB_SetText() returns 1 upon success and 0 upon failure.
            </summary>
            <param name="NewText"></param>
            <param name="PartNumber"></param>
            <param name="Style"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.ToolTip(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an always-on-top window anywhere on the screen.
            </summary>
            <param name="Text">
            <para>If blank or omitted, the existing tooltip (if any) will be hidden. Otherwise, this parameter is the text to display in the tooltip. To create a multi-line tooltip, use the linefeed character (`n) in between each line, e.g. Line1`nLine2.</para>
            <para>If Text is long, it can be broken up into several shorter lines by means of a continuation section, which might improve readability and maintainability.</para>
            </param>
            <param name="X">The X position of the tooltip relative to the active window (use "CoordMode, ToolTip" to change to screen coordinates). If the coordinates are omitted, the tooltip will be shown near the mouse cursor. X and Y can be expressions.</param>
            <param name="Y">The Y position (see <paramref name="X"/>).</param>
            <param name="ID">Omit this parameter if you don't need multiple tooltips to appear simultaneously. Otherwise, this is a number between 1 and 20 to indicate which tooltip window to operate upon. If unspecified, that number is 1 (the first).</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.TrayTip(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Creates a balloon message window near the tray icon. Requires Windows 2000/XP or later.
            </summary>
            <param name="Title">
            <para>If all parameters are omitted, any TrayTip window currently displayed will be removed.</para>
            <para>Otherwise, this parameter is the title of the window, which can be up to 73 characters long (characters beyond this length are not shown).</para>
            <para>If Title is blank, the title line will be entirely omitted from the balloon window, making it vertically shorter.</para>
            </param>
            <param name="Text">
            <para>If this parameter is omitted or blank, any TrayTip window currently displayed will be removed.</para>
            <para>Otherwise, specify the message to display, which appears beneath Title. Only the first 265 characters of Text will be displayed. Carriage return (`r) or linefeed (`n) may be used to create multiple lines of text. For example: Line1`nLine2</para>
            <para>If Text is long, it can be broken up into several shorter lines by means of a continuation section, which might improve readability and maintainability.</para>
            </param>
            <param name="Seconds">
            <para>The approximate number of seconds to display the window, after which it will be automatically removed by the OS. Specifying a number less than 10 or greater than 30 will usually cause the minimum (10) or maximum (30) display time to be used instead. If blank or omitted, the minimum time will usually be used. This parameter can be an expression.</para>
            <para>The actual timeout may vary from the one specified. Microsoft explains, "if the user does not appear to be using the computer, the system does not count this time towards the timeout." (Technical details here.) Therefore, to have precise control over how long the TrayTip is displayed, use the Sleep command followed by TrayTip with no parameters, or use SetTimer as illustrated in the Examples section below.</para>
            </param>
            <param name="Options">
            <para>Specify one of the following digits to have a small icon appear to the left of Title:</para>
            <list>
            <item>1: Info icon</item>
            <item>2: Warning icon</item>
            <item>3: Error icon</item>
            <para>If omitted, it defaults to 0, which is no icon.</para>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_Add(System.String,System.String[])">
            <summary>
            Adds a new row to the end of the list
            </summary>
            <param name="options">See <see cref="M:IronAHK.Rusty.Core.LV_Modify(System.Int32,System.String,System.String[])"/>.</param>
            <param name="fields">Text for each column.</param>
            <returns>The 1-based index of the new row.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_Delete(System.Int32)">
            <summary>
            Removes one or all rows.
            </summary>
            <param name="row">The 1-based row index. Leave blank to remove every row.</param>
            <returns><c>true</c> if one or more rows were deleted, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_DeleteCol(System.Int32)">
            <summary>
            Deletes a column.
            </summary>
            <param name="column">The 1-based column index.</param>
            <returns><c>true</c> if the specified column was removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_GetCount(System.String)">
            <summary>
            Returns the number of columns or rows.
            </summary>
            <param name="type">
            <list type="bullet">
            <item><term>(blank)</term>: <description>all rows</description></item>
            <item><term>Selected</term>: <description>selected rows</description></item>
            <item><term>Column</term>: <description>columns</description></item>
            </list>
            </param>
            <returns>The number of columns or rows as specified by <paramref name="type"/>.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_GetNext(System.Int32,System.String)">
            <summary>
            Returns the row number of the next selected, checked, or focused row.
            </summary>
            <param name="index">The starting index. Leave blank to search from the first row.</param>
            <param name="type">
            <list type="bullet">
            <item><term>(blank)</term>: <description>a selected row</description></item>
            <item><term>Checked</term>: <description>a checked row</description></item>
            <item><term>Focused</term>: <description>a focused row</description></item>
            </list>
            </param>
            <returns>The next row number matching the specified criteria.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_GetText(System.String@,System.Int32,System.Int32)">
            <summary>
            Retrieves the text at the specified <paramref name="row"/> and <paramref name="column"/>.
            </summary>
            <param name="result">The variable in which to store the retrieved text.</param>
            <param name="row">The 1-based row index. Leave blank to return the <paramref name="column"/> header.</param>
            <param name="column">The 1-based column index.</param>
            <returns><c>true</c> if the specified <paramref name="row"/> and <paramref name="column"/> was found, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_Insert(System.Int32,System.String,System.String[])">
            <summary>
            Inserts a row at the specified position.
            </summary>
            <param name="row">The 1-based row index.</param>
            <param name="options">See <see cref="M:IronAHK.Rusty.Core.LV_Modify(System.Int32,System.String,System.String[])"/>.</param>
            <param name="fields">Text for each column.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_InsertCol(System.Int32,System.String,System.String)">
            <summary>
            Creates a new column at the specified position.
            </summary>
            <param name="column">The 1-based row index.</param>
            <param name="options">See <see cref="M:IronAHK.Rusty.Core.LV_ModifyCol(System.Int32,System.String,System.String)"/>.</param>
            <param name="title">The column title.</param>
            <returns>The index of the created column.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_Modify(System.Int32,System.String,System.String[])">
            <summary>
            Modifies the attributes and/or text of a row.
            </summary>
            <param name="row">The 1-based row index.</param>
            <param name="options"></param>
            <param name="fields">New text for each column. Leave blank to use the existing contents.</param>
            <returns><c>true</c> if attributes and/or text were successfully applied, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_ModifyCol(System.Int32,System.String,System.String)">
            <summary>
            Modifies the attributes and/or text of the specified column and its header.
            </summary>
            <param name="column">The 1-based column index.</param>
            <param name="options"></param>
            <param name="title">The column title. Leave blank to keep the existing contents.</param>
            <returns><c>true</c> if attributes and/or text were successfully applied, <c>false</c> otherwise.</returns>
            <remarks>Leave <paramref name="options"/> and <paramref name="title"/> blank to auto-size the column to fit its contents width.
            If <paramref name="column"/> is also unspecified every column will be adjusted this way.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.LV_SetImageList(System.Int64,System.Int32)">
            <summary>
            Sets the ImageList whose icons will be displayed by the rows of the ListView.
            </summary>
            <param name="id">The ImageList ID. See <see cref="M:IronAHK.Rusty.Core.IL_Create"/>.</param>
            <param name="type">
            The type of image list:
            <list type="bullet">
            <item><term>0 (default)</term>: <description>large</description></item>
            <item><term>1</term>: <description>small</description></item>
            <item><term>2</term>: <description>state</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.IniDelete(System.String,System.String,System.String)">
            <summary>
            Deletes a value from a standard format .ini file.
            </summary>
            <param name="file">The name of the file.</param>
            <param name="section">The section name.</param>
            <param name="key">The key name. If omitted, the entire <paramref name="section"/> will be deleted.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.IniRead(System.String@,System.String,System.String,System.String,System.String)">
            <summary>
            Reads a value from a standard format .ini file.
            </summary>
            <param name="result">The variable to store the result.</param>
            <param name="file">The name of the file.</param>
            <param name="section">The section name.</param>
            <param name="key">The key name.</param>
            <param name="error">The value to store in <paramref name="result"/> if the specified <paramref name="key"/> is not found.
            By default this is "ERROR".</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.IniWrite(System.String,System.String,System.String,System.String)">
            <summary>
            Writes a value to a standard format .ini file.
            </summary>
            <param name="value">The string or number that will be written to the right of <paramref name="key"/>'s equal sign (=).</param>
            <param name="file">The name of the file.</param>
            <param name="section">The section name.</param>
            <param name="key">The key name.</param>
            <remarks><see cref="P:IronAHK.Rusty.Core.ErrorLevel"/> is set to <c>1</c> if there was a problem or <c>0</c> otherwise.</remarks>
        </member>
        <member name="M:IronAHK.Rusty.Core.Hotkey(System.String,System.String,System.String)">
            <summary>
            Creates or modifies a hotkey.
            </summary>
            <param name="KeyName">Name of the hotkey's activation key including any modifier symbols.</param>
            <param name="Label">The name of the function or label whose contents will be executed when the hotkey is pressed.
            This parameter can be left blank if <paramref name="KeyName"/> already exists as a hotkey,
            in which case its label will not be changed. This is useful for changing only the <paramref name="Options"/>.
            </param>
            <param name="Options">
            <list type="bullet">
            <item><term>UseErrorLevel</term>: <description>skips the warning dialog and sets <see cref="P:IronAHK.Rusty.Core.ErrorLevel"/> if there was a problem.</description></item>
            <item><term>On</term>: <description>the hotkey becomes enabled.</description></item>
            <item><term>Off</term>: <description>the hotkey becomes disabled.</description></item>
            <item><term>Toggle</term>: <description>the hotkey is set to the opposite state (enabled or disabled).</description></item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Hotstring(System.String,System.String,System.String)">
            <summary>
            Creates a hotstring.
            </summary>
            <param name="Sequence"></param>
            <param name="Label"></param>
            <param name="Options"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.BlockInput(System.String)">
            <summary>
            Disables or enables the user's ability to interact with the computer via keyboard and mouse.
            </summary>
            <param name="Mode">
            <list type="bullet">
            <item>On: the user is prevented from interacting with the computer (mouse and keyboard input has no effect).</item>
            <item>Off: input is re-enabled.</item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.GetKeyState(System.String,System.String)">
            <summary>
            Unlike the GetKeyState command -- which returns D for down and U for up -- this function returns (1) if the key is down and (0) if it is up.
            If <paramref name="KeyName"/> is invalid, an empty string is returned.
            </summary>
            <param name="KeyName">Use autohotkey definition or virtual key starting from "VK"</param>
            <param name="Mode"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.KeyWait(System.String,System.String)">
            <summary>
            Waits for a key or mouse/joystick button to be released or pressed down.
            </summary>
            <param name="KeyName">
            <para>This can be just about any single character from the keyboard or one of the key names from the key list, such as a mouse/joystick button. Joystick attributes other than buttons are not supported.</para>
            <para>An explicit virtual key code such as vkFF may also be specified. This is useful in the rare case where a key has no name and produces no visible character when pressed. Its virtual key code can be determined by following the steps at the bottom fo the key list page.</para>
            </param>
            <param name="Options">
            <para>If this parameter is blank, the command will wait indefinitely for the specified key or mouse/joystick button to be physically released by the user. However, if the keyboard hook is not installed and KeyName is a keyboard key released artificially by means such as the Send command, the key will be seen as having been physically released. The same is true for mouse buttons when the mouse hook is not installed.</para>
            <para>Options: A string of one or more of the following letters (in any order, with optional spaces in between):</para>
            <list type="">
            <item>D: Wait for the key to be pushed down.</item>
            <item>L: Check the logical state of the key, which is the state that the OS and the active window believe the key to be in (not necessarily the same as the physical state). This option is ignored for joystick buttons.</item>
            <item>T: Timeout (e.g. T3). The number of seconds to wait before timing out and setting ErrorLevel to 1. If the key or button achieves the specified state, the command will not wait for the timeout to expire. Instead, it will immediately set ErrorLevel to 0 and the script will continue executing.</item>
            </list>
            <para>The timeout value can be a floating point number such as 2.5, but it should not be a hexadecimal value such as 0x03.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Input(System.String@,System.String,System.String,System.String)">
            <summary>
            Waits for the user to type a string (not supported on Windows 9x: it does nothing).
            </summary>
            <param name="result">
            <para>The name of the variable in which to store the text entered by the user (by default, artificial input is also captured).</para>
            <para>If this and the other parameters are omitted, any Input in progress in another thread is terminated and its ErrorLevel is set to the word NewInput. By contrast, the ErrorLevel of the current command will be set to 0 if it terminated a prior Input, or 1 if there was no prior Input to terminate.</para>
            <para>OutputVar does not store keystrokes per se. Instead, it stores characters produced by keystrokes according to the active window's keyboard layout/language. Consequently, keystrokes that do not produce characters (such as PageUp and Escape) are not stored (though they can be recognized via the EndKeys parameter below).</para>
            <para>Whitespace characters such as TAB (`t) are stored literally. ENTER is stored as linefeed (`n).</para>
            </param>
            <param name="options">
            <para>A string of zero or more of the following letters (in any order, with optional spaces in between):</para>
            <para>B: Backspace is ignored. Normally, pressing backspace during an Input will remove the most recently pressed character from the end of the string. Note: If the input text is visible (such as in an editor) and the arrow keys or other means are used to navigate within it, backspace will still remove the last character rather than the one behind the caret (insertion point).</para>
            <para>C: Case sensitive. Normally, MatchList is not case sensitive (in versions prior to 1.0.43.03, only the letters A-Z are recognized as having varying case, not letters like ь/Ь).</para>
            <para>I: Ignore input generated by any AutoHotkey script, such as the SendEvent command. However, the SendInput and SendPlay methods are always ignored, regardless of this setting.</para>
            <para>L: Length limit (e.g. L5). The maximum allowed length of the input. When the text reaches this length, the Input will be terminated and ErrorLevel will be set to the word Max unless the text matches one of the MatchList phrases, in which case ErrorLevel is set to the word Match. If unspecified, the length limit is 16383, which is also the absolute maximum.</para>
            <para>M: Modified keystrokes such as Control-A through Control-Z are recognized and transcribed if they correspond to real ASCII characters. Consider this example, which recognizes Control-C:</para>
            <code>Transform, CtrlC, Chr, 3 ; Store the character for Ctrl-C in the CtrlC var. 
            Input, OutputVar, L1 M
            if OutputVar = %CtrlC%
            MsgBox, You pressed Control-C.</code>
            <para>ExitAppNote: The characters Ctrl-A through Ctrl-Z correspond to Chr(1) through Chr(26). Also, the M option might cause some keyboard shortcuts such as Ctrl-LeftArrow to misbehave while an Input is in progress.</para>
            <para>T: Timeout (e.g. T3). The number of seconds to wait before terminating the Input and setting ErrorLevel to the word Timeout. If the Input times out, OutputVar will be set to whatever text the user had time to enter. This value can be a floating point number such as 2.5.</para>
            <para>V: Visible. Normally, the user's input is blocked (hidden from the system). Use this option to have the user's keystrokes sent to the active window.</para>
            <para>*: Wildcard (find anywhere). Normally, what the user types must exactly match one of the MatchList phrases for a match to occur. Use this option to find a match more often by searching the entire length of the input text.</para>
            </param>
            <param name="endKeys">
            <para>A list of zero or more keys, any one of which terminates the Input when pressed (the EndKey itself is not written to OutputVar). When an Input is terminated this way, ErrorLevel is set to the word EndKey followed by a colon and the name of the EndKey. Examples: <code>EndKey:.
            EndKey:Escape</code></para>
            <para>The EndKey list uses a format similar to the Send command. For example, specifying {Enter}.{Esc} would cause either ENTER, period (.), or ESCAPE to terminate the Input. To use the braces themselves as end keys, specify {{} and/or {}}.</para>
            <para>To use Control, Alt, or Shift as end-keys, specify the left and/or right version of the key, not the neutral version. For example, specify {LControl}{RControl} rather than {Control}.</para>
            <para>Although modified keys such as Control-C (^c) are not supported, certain keys that require the shift key to be held down -- namely punctuation marks such as ?!:@&amp;{} -- are supported in v1.0.14+.</para>
            <para>An explicit virtual key code such as {vkFF} may also be specified. This is useful in the rare case where a key has no name and produces no visible character when pressed. Its virtual key code can be determined by following the steps at the bottom fo the key list page.</para>
            </param>
            <param name="matchList">
            <para>A comma-separated list of key phrases, any of which will cause the Input to be terminated (in which case ErrorLevel will be set to the word Match). The entirety of what the user types must exactly match one of the phrases for a match to occur (unless the * option is present). In addition, any spaces or tabs around the delimiting commas are significant, meaning that they are part of the match string. For example, if MatchList is "ABC , XYZ ", the user must type a space after ABC or before XYZ to cause a match.</para>
            <para>Two consecutive commas results in a single literal comma. For example, the following would produce a single literal comma at the end of string: "string1,,,string2". Similarly, the following list contains only a single item with a literal comma inside it: "single,,item".</para>
            <para>Because the items in MatchList are not treated as individual parameters, the list can be contained entirely within a variable. In fact, all or part of it must be contained in a variable if its length exceeds 16383 since that is the maximum length of any script line. For example, MatchList might consist of %List1%,%List2%,%List3% -- where each of the variables contains a large sub-list of match phrases.</para>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Send(System.String)">
            <summary>
            Sends simulated keystrokes and mouse clicks to the active window.
            </summary>
            <param name="Keys">The sequence of keys to send.</param>
        </member>
        <member name="M:IronAHK.Rusty.Core.SetLockState(System.String,System.String)">
            <summary>
            Sets the state of the NumLock, ScrollLock or CapsLock keys.
            </summary>
            <param name="Key">
            <list type="bullet">
            <item>NumLock</item>
            <item>ScrollLock</item>
            <item>CapsLock</item>
            </list>
            </param>
            <param name="Mode">
            <list type="bullet">
            <item><term>On</term></item>
            <item><term>Off</term></item>
            <item><term>AlwaysOn</term>: <description>forces the key to stay on permanently.</description></item>
            <item><term>AlwaysOn</term>: <description>forces the key to stay off permanently.</description></item>
            <item><term>(blank)</term>: turn off the <c>AlwaysOn</c> or <c>Off</c> states if present.</item>
            </list>
            </param>
        </member>
        <member name="M:IronAHK.Rusty.Core.Gui(System.String,System.String,System.String,System.String)">
            <summary>
            Creates and manages windows and controls.
            </summary>
            <param name="Command">
            <list type="bullet">
            <item><term>Add</term>: <description>creates controls.</description></item>
            <item><term>Show</term>: <description>display or move the window.</description></item>
            <item><term>Submit</term>: <description>saves user input.</description></item>
            <item><term>Hide</term>: <description>hides the window.</description></item>
            <item><term>Destroy</term>: <description>deletes the window.</description></item>
            <item><term>Font</term>: <description>sets the default font style for subsequently created controls.</description></item>
            <item><term>Color</term>: <description>sets the color for the window or controls.</description></item>
            <item><term>Margin</term>: <description>sets the spacing used between the edges of the window and controls when an absolute position is unspecified.</description></item>
            <item><term>Options</term>: <description>sets various options for the appearance and behaviour of the window.</description></item>
            <item><term>Menu</term>: <description>associates a menu bar with the window.</description></item>
            <item><term>Minimize/Maximize/Restore</term>: <description>performs the indicated operation on the window.</description></item>
            <item><term>Flash</term>: <description>blinks the window in the task bar.</description></item>
            <item><term>Default</term>: <description>changes the default window on the current thread.</description></item>
            </list>
            </param>
            <param name="Param2"></param>
            <param name="Param3"></param>
            <param name="Param4"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.GuiControl(System.String,System.String,System.String)">
            <summary>
            Makes a variety of changes to a control in a GUI window.
            </summary>
            <param name="Command"></param>
            <param name="ControlID"></param>
            <param name="Param3"></param>
        </member>
        <member name="M:IronAHK.Rusty.Core.GuiControlGet(System.Object@,System.String,System.String,System.String)">
            <summary>
            Retrieves various types of information about a control in a GUI window.
            </summary>
            <param name="result"></param>
            <param name="command"></param>
            <param name="control"></param>
            <param name="option"></param>
        </member>
        <member name="P:IronAHK.Rusty.Core.windowGroups">
            <summary>
            easy access to the window groups
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.windowManager">
            <summary>
            easy access to the windowmanager
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_AhkPath">
            <summary>
            The full path of the assembly that is currently executing.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_AhkVersion">
            <summary>
            The version of the assembly that is currently executing.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_AppData">
            <summary>
            The full path and name of the folder containing the current user's application-specific data. For example: <code>C:\Documents and Settings\Username\Application Data</code>
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_AppDataCommon">
            <summary>
            The full path and name of the folder containing the all-users application-specific data.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_BatchLines">
            <summary>
            (synonymous with A_NumBatchLines) The current value as set by SetBatchLines. Examples: 200 or 10ms (depending on format).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_CaretX">
            <summary>
            The current X coordinate of the caret (text insertion point). The coordinates are relative to the active window unless CoordMode is used to make them relative to the entire screen. If there is no active window or the caret position cannot be determined, these variables are blank.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_CaretY">
            <summary>
            The current Y coordinate of the caret (text insertion point). The coordinates are relative to the active window unless CoordMode is used to make them relative to the entire screen. If there is no active window or the caret position cannot be determined, these variables are blank.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ComputerName">
            <summary>
            The name of the computer as seen on the network.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ControlDelay">
            <summary>
            The delay in milliseconds that will occur after each control-modifying command.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Cursor">
            <summary>
            The type of mouse cursor currently being displayed. It will be one of the following words: AppStarting, Arrow, Cross, Help, IBeam, Icon, No, Size, SizeAll, SizeNESW, SizeNS, SizeNWSE, SizeWE, UpArrow, Wait, Unknown. The acronyms used with the size-type cursors are compass directions, e.g. NESW = NorthEast+SouthWest. The hand-shaped cursors (pointing and grabbing) are classfied as Unknown.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_DD">
            <summary>
            See <see cref="P:IronAHK.Rusty.Core.A_MDay"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_DDD">
            <summary>
            Current day of the week's 3-letter abbreviation in the current user's language, e.g. <code>Sun</code>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_DDDD">
            <summary>
            Current day of the week's full name in the current user's language, e.g. <code>Sunday</code>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_DefaultMouseSpeed">
            <summary>
            Sets the mouse speed that will be used if unspecified in <see cref="M:IronAHK.Rusty.Core.Click(System.Object[])"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Desktop">
            <summary>
            The full path and name of the folder containing the current user's desktop files.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_DesktopCommon">
            <summary>
            The full path and name of the folder containing the all-users desktop files.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_DetectHiddenText">
            <summary>
            Determines whether invisible text in a window is "seen" for the purpose of finding the window. This affects commands such as <see cref="M:IronAHK.Rusty.Core.WinExist(System.String,System.String,System.String,System.String)"/> and <see cref="M:IronAHK.Rusty.Core.WinActivate(System.String,System.String,System.String,System.String)"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_DetectHiddenWindows">
            <summary>
            Determines whether invisible windows are "seen".
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_DirSeperator">
            <summary>
            The native directory seperator string, i.e. "/" on Unix, "\" on Windows.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_E">
            <summary>
            Represents the natural logarithmic base, specified by the constant, e.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_EndChar">
            <summary>
            The ending character that was pressed by the user to trigger the most recent non-auto-replace hotstring. If no ending character was required (due to the * option), this variable will be blank.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_EventInfo">
            <summary>
            Contains event information from various commands.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ExitReason">
            <summary>
            The most recent reason the script was asked to terminate. This variable is blank unless the script has an OnExit subroutine and that subroutine is currently running or has been called at least once by an exit attempt. See OnExit for details.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_FormatFloat">
            <summary>
            The current floating point number format.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_FormatInteger">
            <summary>
            The current integer format, either <c>H</c> or <c>D</c>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_FormatNumeric">
            <summary>
            The current numeric format.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Gui">
            <summary>
            The GUI window number that launched the current thread. This variable is blank unless a Gui control, menu bar item, or event such as GuiClose/GuiEscape launched the current thread.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_GuiEvent">
            <summary>
            <para>The type of event that launched the current thread. If the thread was not launched via GUI action, this variable is blank. Otherwise, it contains one of the following strings:</para>
            <para>Normal: The event was triggered by a single left-click or via keystrokes (arrow keys, TAB key, space bar, underlined shortcut key, etc.). This value is also used for menu bar items and the special events such as GuiClose and GuiEscape.</para>
            <para>DoubleClick: The event was triggered by a double-click. Note: The first click of the click-pair will still cause a Normal event to be received first. In other words, the subroutine will be launched twice: once for the first click and again for the second.</para>
            <para>RightClick: Occurs only for GuiContextMenu, ListViews, and TreeViews.</para>
            <para>Context-sensitive values: For details see GuiContextMenu, GuiDropFiles, Slider, MonthCal, ListView, and TreeView.</para>
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_GuiControl">
            <summary>
            The name of the variable associated with the GUI control that launched the current thread. If that control lacks an associated variable, A_GuiControl instead contains the first 63 characters of the control's text/caption (this is most often used to avoid giving each button a variable name). A_GuiControl is blank whenever: 1) A_Gui is blank; 2) a GUI menu bar item or event such as GuiClose/GuiEscape launched the current thread; 3) the control lacks an associated variable and has no caption; or 4) The control that originally launched the current thread no longer exists (perhaps due to Gui Destroy).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_GuiControlEvent">
            <summary>
            See <see cref="P:IronAHK.Rusty.Core.A_GuiEvent"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_GuiHeight">
            <summary>
            These contain the GUI window's height when referenced in a GuiSize subroutine. They apply to the window's client area, which is the area excluding title bar, menu bar, and borders.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_GuiWidth">
            <summary>
            These contain the GUI window's width when referenced in a GuiSize subroutine. They apply to the window's client area, which is the area excluding title bar, menu bar, and borders.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_GuiX">
            <summary>
            These contain the X coordinate for GuiContextMenu and GuiDropFiles events. Coordinates are relative to the upper-left corner of the window.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_GuiY">
            <summary>
            These contain the Y coordinate for GuiContextMenu and GuiDropFiles events. Coordinates are relative to the upper-left corner of the window.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Hour">
            <summary>
            Current 2-digit hour (00-23) in 24-hour time (for example, 17 is 5pm).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IconFile">
            <summary>
            Blank unless a custom tray icon has been specified via Menu, tray, icon -- in which case it's the full path and name of the icon's file.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IconHidden">
            <summary>
            Contains 1 if the tray icon is currently hidden or 0 otherwise. The icon can be hidden via #NoTrayIcon or the Menu command.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IconNumber">
            <summary>
            Blank if A_IconFile is blank. Otherwise, it's the number of the icon in A_IconFile (typically 1).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IconTip">
            <summary>
            Blank unless a custom tooltip for the tray icon has been specified via Menu, Tray, Tip -- in which case it's the text of the tip.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Index">
            <summary>
            The number of the current loop iteration.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IPAddress1">
            <summary>
            The IP address of the first network adapter in the computer.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IPAddress2">
            <summary>
            The IP address of the second network adapter in the computer.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IPAddress3">
            <summary>
            The IP address of the third network adapter in the computer.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IPAddress4">
            <summary>
            The IP address of the fourth network adapter in the computer.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IPAddress">
            <summary>
            The IP addresses of the network adapters in the computer.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ISAdmin">
            <summary>
            <code>true</code> if the current user has administrator rights, <code>false</code> otherwise.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IsCompiled">
            <summary>
            <code>true</code> if the current executing assembly is a compiled script, <code>false</code> otherwise;
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IsCritical">
            <summary>
            <c>1</c> if the current thread is marked as critical, <c>0</c> otherwise.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_IsSuspended">
            <summary>
            <code>true</code> if the script is suspended, <code>false</code> otherwise;
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_KeyDelay">
            <summary>
            The delay that will occur after each keystroke sent by <see cref="M:IronAHK.Rusty.Core.Send(System.String)"/> and <see cref="M:IronAHK.Rusty.Core.ControlSend(System.String,System.String,System.String,System.String,System.String,System.String)"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_KeyPressDuration">
            <summary>
            The delay between the press of a key and before its release, used with <see cref="P:IronAHK.Rusty.Core.A_KeyDelay"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Language">
            <summary>
            The system's default language code.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LastError">
            <summary>
            The result from Windows <code>GetLastError()</code> function.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopField">
            <summary>
            The current element of a loop.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopKey">
            <summary>
            The current object key in an each-loop.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileAttrib">
            <summary>
            The attributes of the file currently retrieved.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileDir">
            <summary>
            The full path of the directory in which A_LoopFileName resides. However, if FilePattern contains a relative path rather than an absolute path, the path here will also be relative. A root directory will not contain a trailing backslash. For example: C:
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileExt">
            <summary>
            The file's extension (e.g. TXT, DOC, or EXE). The period (.) is not included.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileFullPath">
            <summary>
            The full path and name of the file/folder currently retrieved. However, if FilePattern contains a relative path rather than an absolute path, the path here will also be relative. In addition, any short (8.3) folder names in FilePattern will still be short (see next item to get the long version).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileLongPath">
            <summary>
            This is different than A_LoopFileFullPath in the following ways: 1) It always contains the absolute/complete path of the file even if FilePattern contains a relative path; 2) Any short (8.3) folder names in FilePattern itself are converted to their long names; 3) Characters in FilePattern are converted to uppercase or lowercase to match the case stored in the file system. This is useful for converting file names -- such as those passed into a script as command line parameters -- to their exact path names as shown by Explorer.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileName">
            <summary>
            The name of the file or folder currently retrieved (without the path).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileShortName">
            <summary>
            The 8.3 short name, or alternate name of the file. If the file doesn't have one (due to the long name being shorter than 8.3 or perhaps because short-name generation is disabled on an NTFS file system), A_LoopFileName will be retrieved instead.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileShortPath">
            <summary>
            The 8.3 short path and name of the file/folder currently retrieved. For example: C:\MYDOCU~1\ADDRES~1.txt. However, if FilePattern contains a relative path rather than an absolute path, the path here will also be relative.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileSize">
            <summary>
            The size in bytes of the file currently retrieved. Files larger than 4 gigabytes are also supported.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileSizeKB">
            <summary>
            The size in Kbytes of the file currently retrieved, rounded down to the nearest integer.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileSizeMB">
            <summary>
            The size in Mbytes of the file currently retrieved, rounded down to the nearest integer.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileTimeAccessed">
            <summary>
            The time the file was last accessed. Format YYYYMMDDHH24MISS.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileTimeCreated">
            <summary>
            The time the file was created. Format YYYYMMDDHH24MISS.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopFileTimeModified">
            <summary>
            The time the file was last modified. Format YYYYMMDDHH24MISS.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopReadLine">
            <summary>
            Contains the contents of the current line excluding the carriage return and linefeed (`r`n) that marks the end of the line.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopRegKey">
            <summary>
            The name of the root key being accessed (HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT, or HKEY_CURRENT_CONFIG). For remote registry access, this value will not include the computer name.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopRegName">
            <summary>
            Name of the currently retrieved item, which can be either a value name or the name of a subkey. Value names displayed by Windows RegEdit as "(Default)" will be retrieved if a value has been assigned to them, but A_LoopRegName will be blank for them.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopRegSubkey">
            <summary>
            Name of the current SubKey. This will be the same as the Key parameter unless the Recurse parameter is being used to recursively explore other subkeys. In that case, it will be the full path of the currently retrieved item, not including the root key. For example: Software\SomeApplication\My SubKey
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopRegTimeModified">
            <summary>
            The time the current subkey or any of its values was last modified. Format YYYYMMDDHH24MISS. This variable will be empty if the currently retrieved item is not a subkey (i.e. A_LoopRegType is not the word KEY) or if the operating system is Win9x (since Win9x does not track this info).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_LoopRegType">
            <summary>
            The type of the currently retrieved item, which is one of the following words: KEY (i.e. the currently retrieved item is a subkey not a value), REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD, REG_QWORD, REG_BINARY, REG_LINK, REG_RESOURCE_LIST, REG_FULL_RESOURCE_DESCRIPTOR, REG_RESOURCE_REQUIREMENTS_LIST, REG_DWORD_BIG_ENDIAN (probably rare on most Windows hardware). It will be empty if the currently retrieved item is of an unknown type.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_MDay">
            <summary>
            Current 2-digit day of the month (01-31).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Min">
            <summary>
            Current 2-digit minute (00-59).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_MM">
            <summary>
            Current 2-digit month (01-12). Synonymous with <see cref="P:IronAHK.Rusty.Core.A_Mon"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_MMM">
            <summary>
            Current month's abbreviation in the current user's language, e.g. <code>Jul</code>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_MMMM">
            <summary>
            Current month's full name in the current user's language, e.g. <code>July</code>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Mon">
            <summary>
            Current 2-digit month (01-12).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_MouseDelay">
            <summary>
            Sets the delay that will occur after each mouse movement or click.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_MSec">
            <summary>
            Current 3-digit millisecond (000-999).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_MyDocuments">
            <summary>
            The full path and name of the current user's "My Documents" folder.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Now">
            <summary>
            The current local time in YYYYMMDDHH24MISS format.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_NowUTC">
            <summary>
            The current Coordinated Universal Time (UTC) in YYYYMMDDHH24MISS format.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_NumBatchLines">
            <summary>
            See <see cref="P:IronAHK.Rusty.Core.A_BatchLines"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_OSType">
            <summary>
            The type of Operating System being run, e.g. <code>WIN32_WINDOWS</code> for Windows 95/98/ME or <code>WIN32_NT</code> for Windows NT4/2000/XP/2003/Vista.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_OSVersion">
            <summary>
            The Operating System version, e.g. <code>WIN_VISTA</code>, <code>WIN_2003</code>, <code>WIN_XP</code>, <code>WIN_2000</code>, <code>WIN_NT4</code>, <code>WIN_95</code>, <code>WIN_98</code>, <code>WIN_ME</code>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_PI">
            <summary>
            Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_PriorHotkey">
            <summary>
            The key name of the previously executed hotkey or hotstring.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ProgramFiles">
            <summary>
            The Program Files directory (e.g. <code>C:\Program Files</code>).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Programs">
            <summary>
            The full path and name of the Programs folder in the current user's Start Menu.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ProgramsCommon">
            <summary>
            The full path and name of the Programs folder in the all-users Start Menu.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ScreenHeight">
            <summary>
            <para>The width and height of the primary monitor, in pixels (e.g. 1024 and 768).</para>
            <para>To discover the dimensions of other monitors in a multi-monitor system, use SysGet.</para>
            <para>To instead discover the width and height of the entire desktop (even if it spans multiple monitors), use the following example (but on Windows 95/NT, both of the below variables will be set to 0):</para>
            <code>
            SysGet, VirtualWidth, 78
            SysGet, VirtualHeight, 79
            </code>
            <para>In addition, use SysGet to discover the work area of a monitor, which can be smaller than the monitor's total area because the taskbar and other registered desktop toolbars are excluded.</para>
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ScreenWidth">
            <summary>
            See <see cref="P:IronAHK.Rusty.Core.A_ScreenHeight"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Sec">
            <summary>
            Current 2-digit second (00-59).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Space">
            <summary>
            This variable contains a single space character.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_StartMenu">
            <summary>
            The full path and name of the current user's Start Menu folder.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_StartMenuCommon">
            <summary>
            The full path and name of the all-users Start Menu folder.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Startup">
            <summary>
            The full path and name of the Startup folder in the current user's Start Menu.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_StartupCommon">
            <summary>
            The full path and name of the Startup folder in the all-users Start Menu.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_StringCaseSense">
            <summary>
            Determines whether string comparisons are case sensitive.
            </summary>
            <value>
            <list type="bullet">
            <item><term>On</term>: <description>comparisons are case sensitive.</description></item>
            <item><term>Off</term>: <description>the letters A-Z are considered identical to their lowercase counterparts.</description></item>
            <item><term>Locale</term>: <description>comparisons are case insensitive according to the rules of the current locale.</description></item>
            </list>
            </value>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_StringComparison">
            <summary>
            The culture, case and sort rules to use when comparing strings.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Tab">
            <summary>
            This variable contains a single tab character.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Temp">
            <summary>
            The full path and name of the folder designated to hold temporary files.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_TempFile">
            <summary>
            Temporary file name.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ThisHotkey">
            <summary>
            The key name of the most recently executed hotkey or hotstring.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ThisMenu">
            <summary>
            The name of the menu from which A_ThisMenuItem was selected.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ThisMenuItem">
            <summary>
            The name of the most recently selected custom menu item (blank if none).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_ThisMenuItemPos">
            <summary>
            A number indicating the current position of A_ThisMenuItem within A_ThisMenu. The first item in the menu is 1, the second is 2, and so on. Menu separator lines are counted. This variable is blank if A_ThisMenuItem is blank or no longer exists within A_ThisMenu. It is also blank if A_ThisMenu itself no longer exists.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_TickCount">
            <summary>
            The number of milliseconds since the computer was rebooted.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_TimeIdle">
            <summary>
            The number of milliseconds that have elapsed since the system last received keyboard, mouse, or other input. This is useful for determining whether the user is away. This variable will be blank unless the operating system is Windows 2000, XP, or beyond. Physical input from the user as well as artificial input generated by any program or script (such as the Send or MouseMove commands) will reset this value back to zero. Since this value tends to increase by increments of 10, do not check whether it is equal to another value. Instead, check whether it is greater or less than another value. For example: IfGreater, A_TimeIdle, 600000, MsgBox, The last keyboard or mouse activity was at least 10 minutes ago.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_TimeIdlePhysical">
            <summary>
            Same as above but ignores artificial keystrokes and/or mouse clicks whenever the corresponding hook (keyboard or mouse) is installed. If neither hook is installed, this variable is equivalent to A_TimeIdle. If only one hook is present, only that one type of artificial input will be ignored. A_TimeIdlePhysical may be more useful than A_TimeIdle for determining whether the user is truly present.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_TimeSincePriorHotkey">
            <summary>
            Time in ms that have elapsed since <see cref="P:IronAHK.Rusty.Core.A_PriorHotkey"/> was pressed. It will be -1 whenever <see cref="P:IronAHK.Rusty.Core.A_PriorHotkey"/> is blank.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_TimeSinceThisHotkey">
            <summary>
            Time in ms that have elapsed since <see cref="P:IronAHK.Rusty.Core.A_ThisHotkey"/> was pressed. It will be -1 whenever <see cref="P:IronAHK.Rusty.Core.A_ThisHotkey"/> is blank.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_TitleMatchMode">
            <summary>
            The current mode set by <code>SetTitleMatchMode</code>: <code>1</code>, <code>2</code>, <code>3</code>, or <code>RegEx</code>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_TitleMatchModeSpeed">
            <summary>
            The current match speed (<code>fast</code> or <code>slow</code>) set by <code>SetTitleMatchMode</code>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_UserName">
            <summary>
            The logon name of the current user.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_WDay">
            <summary>
            Current 1-digit day of the week (1-7). 1 is Sunday in all locales.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_WinDelay">
            <summary>
            The current delay set by <code>SetWinDelay</code>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_WinDir">
            <summary>
            The Windows directory. For example: <code>C:\Windows</code>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_WorkingDir">
            <summary>
            The script's current working directory, which is where files will be accessed by default.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_YDay">
            <summary>
            Current day of the year (1-366).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_Year">
            <summary>
            Current 4-digit year (e.g. 2004).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_YWeek">
            <summary>
            Current year and week number (e.g. <code>200453</code>) according to ISO 8601.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_YYYY">
            <summary>
            See <see cref="P:IronAHK.Rusty.Core.A_Year"/>.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.A_UserAgent">
            <summary>
            HTTP user agent for <see cref="M:IronAHK.Rusty.Core.URLDownloadToFile(System.String,System.String)"/>.
            </summary>
        </member>
        <member name="E:IronAHK.Rusty.Core.ApplicationExit">
            <summary>
            
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.ErrorLevel">
            <summary>
            Indicates the success or failure of a command.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.Suspended">
            <summary>
            Is the Script currently suspended?
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Core.ComplexDlgOptions.AppendTo(IronAHK.Rusty.IComplexDialoge)">
            <summary>
            Append the given Options here to a IComplexDialoge.
            </summary>
            <param name="complexDlg"></param>
        </member>
        <member name="P:IronAHK.Rusty.Core.MouseController.Location">
            <summary>
            The absolute screen coordinates of the current mouse locaiton.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.MouseController.ClickInfo.Down">
            <summary>
            Send a down click event.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.MouseController.ClickInfo.Up">
            <summary>
            Send an up click event.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.MouseController.ClickInfo.Count">
            <summary>
            Number of times to perform a click.
            Use zero to move the mouse.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.MouseController.ClickInfo.Relative">
            <summary>
            Specifies <see cref="P:IronAHK.Rusty.Core.MouseController.ClickInfo.Location"/> as relative offsets from the current mouse position.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.MouseController.ClickInfo.Location">
            <summary>
            The coordinates on the screen to send the click or mouse movement.
            Leave blank to use the current position.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Core.MouseController.ClickInfo.Button">
            <summary>
            The type of click to send.
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Core.MouseController.ClickInfo.Buttons">
            <summary>
            A mouse button.
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Core.GenericFunction">
            <summary>
            A function.
            </summary>
            <param name="args">Parameters.</param>
            <returns>A value.</returns>
        </member>
        <member name="M:IronAHK.Rusty.Common.GuiInvoker.SetText(System.Windows.Forms.Control,System.String)">
            <summary>
            Threadsave Text Property setter
            </summary>
            <param name="control"></param>
            <param name="text"></param>
        </member>
        <member name="T:IronAHK.Rusty.Common.Mapper.DriveTypeMapper">
            <summary>
            Maps DriveType's
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Windows.Drive">
            <summary>
            Implementation for native Windows Drive Operations
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Drive.Eject">
            <summary>
            Ejects the CD Drive
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Drive.Retract">
            <summary>
            Retracts the CD Drive
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Drive.Lock">
            <summary>
            Locks the drives Eject ability
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Drive.UnLock">
            <summary>
            Unlocks the drives Eject ability
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Common.Drive.StatusCD">
            <summary>
            Status of the CD
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Drive.DriveProvider.CreateDrive(System.IO.DriveInfo)">
            <summary>
            Creates platform specific SystemDrive Instance
            </summary>
            <param name="drive"></param>
            <returns></returns>
        </member>
        <member name="T:IronAHK.Rusty.Common.Singleton`1">
            <summary>
            generic for singletons
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:IronAHK.Rusty.Common.Window.WindowItemProvider">
            <summary>
            Singleton Facade for easy accessing current Platform's WindowManager
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Common.Window.WindowManagerBase">
            <summary>
            Platform Independent Windowmanager.
            This Class is abstract.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Window.WindowManagerBase.MinimizeAll">
            <summary>
            Minimizes all Windows
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Window.WindowManagerBase.MinimizeAllUndo">
            <summary>
            Undo Minimize All Windows
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Window.WindowManagerBase.CreateWindow(System.IntPtr)">
            <summary>
            Creates a concrete Window
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Common.Window.WindowProvider.CreateWindowManager">
            <summary>
            Creates a WindowManager for the current Platform
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Common.Window.WindowItemBase">
            <summary>
            Abstraction of a single Platform independend Window
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Window.WindowItemBase.SendMouseEvent(IronAHK.Rusty.WindowsAPI.MOUSEEVENTF,System.Nullable{System.Drawing.Point})">
            <summary>
            Sends MouseEvent to the current Window/Child/Control
            </summary>
            <param name="mouseevent">MouseEvent to send (for now we take also on abstract layer the windows enum, this might be mapped for other OS.)</param>
            <param name="location"></param>
        </member>
        <member name="M:IronAHK.Rusty.Common.Window.WindowItemBase.Click(System.Nullable{System.Drawing.Point})">
            <summary>
            Left-Clicks on this window/control
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:IronAHK.Rusty.Common.Window.WindowItemBase.ClickRight(System.Nullable{System.Drawing.Point})">
            <summary>
            Right-Clicks on this window/control
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:IronAHK.Rusty.Common.Window.WindowItemBase.Equals(System.Object)">
            <summary>
            Define Standard Equalty Opertaor
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:IronAHK.Rusty.Common.Window.WindowItemBase.Handle">
            <summary>
            OS Handle to identify the Window.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Window.WindowItemBase.ChildWindows">
            <summary>
            Enumerates all child windows/controls
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Window.WindowItemBase.ClassNN">
            <summary>
            Get the ClassName + number of occurence of this window (control)
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Common.Keyboard.KeyboardHook">
            <summary>
            Platform independent keyboard Hook base.
            This Class is abstract.
            </summary>
        </member>
        <member name="E:IronAHK.Rusty.Common.Keyboard.KeyboardHook.IAKeyEvent">
            <summary>
            Raised when a Key is pressed/released
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAKeyEventArgs.Handeled">
            <summary>
            Has this Key already processed enought
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAKeyEventArgs.Block">
            <summary>
            Should this Key be blocked from the system
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Common.Keyboard.IAInputCommand">
            <summary>
            Input Command Handler (Singleton)
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Keyboard.IAInputCommand.StartCatching">
            <summary>
            Start Logging Text. Blocks calling Thread until user input meets an abort condition.
            </summary>
            <returns>Returns the catched Userinput</returns>
        </member>
        <member name="M:IronAHK.Rusty.Common.Keyboard.IAInputCommand.PostAbortCondition(IronAHK.Rusty.Common.Keyboard.IAKeyEventArgs)">
            <summary>
            Checks if we are done with logging.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Common.Keyboard.IAInputCommand.PastAbortCondition(IronAHK.Rusty.Common.Keyboard.IAKeyEventArgs)">
            <summary>
            Checks if we are done with logging.
            </summary>
            <returns></returns>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.Hook">
            <summary>
            Set the KeyboardHook to use to catch userinput
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.Endkeys">
            <summary>
            A list of Keys which terminates the key catching
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.Visible">
            <summary>
            Normally, the user's input is blocked (hidden from the system).
            Use this option to have the user's keystrokes sent to the active window.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.KeyLimit">
            <summary>
            Max Keys which are catched. 0 Means no Limit.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.RecognizeModifiedKeystrockes">
            <summary>
            Modified keystrokes such as Control-A through Control-Z are recognized and
            transcribed if they correspond to real ASCII characters.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.IgnoreBackSpace">
            <summary>
            Backspace is ignored. Normally, pressing backspace during an Input will remove
            the most recently pressed character from the end of the string.
            
            Note: If the input text is visible (such as in an editor) and the arrow keys or other
            means are used to navigate within it, backspace will still remove the last character
            rather than the one behind the caret (insertion point).
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.TimeOutVal">
            <summary>
            The number of milliseconds to wait before terminating the Input and setting ErrorLevel to the word Timeout.
            If the Input times out, OutputVar will be set to whatever text the user had time to enter. 
            
            Null means that there is no TimeOut. (default)
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.EndMatches">
            <summary>
            Strings which force to abort Logging
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.FindAnyWhere">
            <summary>
            Normally, what the user types must exactly match one of the MatchList phrases for a match to occur.
            Use this option to find a match more often by searching the entire length of the input text.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.CaseSensitive">
            <summary>
            Is MatchList case sensitive? 
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.IgnoreIAGeneratedInput">
            <summary>
            Ignore Scripts own Send Input
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.IAInputCommand.IsBusy">
            <summary>
            Is User Input catching running?
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Common.Keyboard.AbortReason">
            <summary>
            Reason why Catching of Userinput was stopped
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Common.Keyboard.KeyWaitCommand">
            <summary>
            Command which holds the current Thread until requested Key was pressed
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Keyboard.KeyWaitCommand.Wait(System.Windows.Forms.Keys)">
            <summary>
            Wait until the key gets pressed.
            </summary>
            <param name="k"></param>
        </member>
        <member name="M:IronAHK.Rusty.Common.Keyboard.KeyWaitCommand.OnKeyEvent(System.Object,IronAHK.Rusty.Common.Keyboard.IAKeyEventArgs)">
            <summary>
            Occurs when a Key is pressed/released
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.KeyWaitCommand.TimeOutVal">
            <summary>
            Define the Timeout when the wait process should timeout.
            Default is null, means no timeout.
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Common.Keyboard.KeyWaitCommand.TriggerOnKeyDown">
            <summary>
            Trigger on the key Down Event. Default is false, what means Key Up event must be fired.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.Keyboard.KeyParser.ParseKey(System.String)">
            <summary>
            Parses a single Key to its Keys Representation
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:IronAHK.Rusty.Linux.XConnectionSingleton">
            <summary>
            Singleton class to keep track of all active windows and their 
            events to help the hotkey and window management code
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Linux.XConnectionSingleton.RecurseTree(System.IntPtr,System.Int32)">
            <summary>
            In the X Window system, windows can have sub windows. This function crawls a
            specific function, and then recurses on all child windows. It is called to 
            select all initial windows. It make some time (~0.5s)
            </summary>
            <param name="Display"></param>
            <param name="RootWindow"></param>
        </member>
        <member name="T:IronAHK.Rusty.Linux.Drive">
            <summary>
            Implementation for native Linux Drive Operations
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Windows.WindowItem">
            <summary>
            represents a window under windows operating system
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Windows.WindowItem.RealChildWindowFromPoint(System.Drawing.Point)">
            <summary>
            Searches for a child window/control at <paramref name="location"/> 
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="P:IronAHK.Rusty.Windows.WindowItem.PreviousWindow">
            <summary>
            returns the previous Window
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Linux.X11.Xlib.XQueryTree(System.IntPtr,System.Int32,System.Int32@,System.Int32@,System.IntPtr@,System.Int32@)">
            <summary>
            The XQueryTree() function returns the root ID, the parent window ID,
            a pointer to the list of children windows (NULL when there are no children),
            and the number of children in the list for the specified window. 
            The children are listed in current stacking order, from bottommost (first) to topmost (last).
            XQueryTree() returns zero if it fails and nonzero if it succeeds. 
            To free a non-NULL children list when it is no longer needed, use XFree().
            </summary>
            <param name="display">Specifies the connection to the X server.</param>
            <param name="w">Specifies the window whose list of children, root, parent, and number of children you want to obtain.</param>
            <param name="root_return">Returns the root window.</param>
            <param name="parent_return">Returns the parent window.</param>
            <param name="children_return">Returns the list of children.</param>
            <param name="nchildren_return">Returns the number of children.</param>
            <returns></returns>
        </member>
        <member name="T:IronAHK.Rusty.Common.CoordProvider">
            <summary>
            Create a global Instance of CoordProvider and use it multithreaded
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.CoordProvider.#ctor(System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Create new CoordProvider with given Settings.
            </summary>
            <param name="uSourceSize">Size of Searchable Image Area</param>
            <param name="uNeedleSize">Size of Needle Image</param>
        </member>
        <member name="M:IronAHK.Rusty.Common.CoordProvider.Next">
            <summary>
            Returns the next Workitem (thread save)
            </summary>
            <returns>Next Coord (Point) or Null if the work is done.</returns>
        </member>
        <member name="T:IronAHK.Rusty.Linux.Proxies.XDisplay">
            <summary>
            Proxy around a X11 xDisplay
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Linux.Proxies.XDisplay.XQueryTree">
            <summary>
            Returns all Windows of this XDisplay
            </summary>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Linux.Proxies.XDisplay.XQueryTree(IronAHK.Rusty.Linux.Proxies.XWindow)">
            <summary>
            Return all child xWindows from given xWindow
            </summary>
            <param name="windowToObtain"></param>
            <returns></returns>
        </member>
        <member name="M:IronAHK.Rusty.Linux.Proxies.XDisplay.XGetInputFocus">
            <summary>
            Returns the window which currently has input focus
            </summary>
            <returns></returns>
        </member>
        <member name="T:IronAHK.Rusty.Common.ImageFinder">
            <summary>
            Class which provides common search Methods to find a Color or a subimage in given Image.
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Common.ImageFinder.#ctor(System.Drawing.Bitmap)">
            <summary>
            Creates a new Image Finder Instance
            </summary>
            <param name="source">Source Image where to search in</param>
        </member>
        <member name="T:IronAHK.Rusty.Common.CRC32">
            <summary>
            Adapted from http://tomkaminski.com/crc32-hashalgorithm-c-net
            License: public domain
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Windows.WindowManager">
            <summary>
            Concrete Implementation of WindowManager for Windows Platfrom
            </summary>
        </member>
        <member name="M:IronAHK.Rusty.Linux.X11.Types.XTextProperty.Free">
            <summary>
            Free the text
            </summary>
        </member>
        <member name="T:IronAHK.Rusty.Linux.Proxies.XWindow">
            <summary>
            represents a single xwindow - proxy for actions affecting x windows
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Linux.Proxies.XWindow.ID">
            <summary>
            ID of the window
            </summary>
        </member>
        <member name="P:IronAHK.Rusty.Linux.Proxies.XWindow.XDisplay">
            <summary>
            Backreference to the XDisplay from this Window
            </summary>
        </member>
    </members>
</doc>
